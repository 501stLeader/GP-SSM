import torch

def get_K_blocks_GIP_sum_PANDA_3dof_no_subs(X1, X2, pos_indices, vel_indices, acc_indices, sigma_kin_vel_list, sigma_kin_pos_list, sigma_pot_list):

    q_i1 = X1[:,pos_indices[0]:pos_indices[0]+1]
    dq_i1 = X1[:,vel_indices[0]:vel_indices[0]+1]
    ddq_i1 = X1[:,acc_indices[0]:acc_indices[0]+1]
    q_j1 = X2[:,pos_indices[0]:pos_indices[0]+1].transpose(1,0)
    dq_j1 = X2[:,vel_indices[0]:vel_indices[0]+1].transpose(1,0)
    ddq_j1 = X2[:,acc_indices[0]:acc_indices[0]+1].transpose(1,0)
    q_i2 = X1[:,pos_indices[1]:pos_indices[1]+1]
    dq_i2 = X1[:,vel_indices[1]:vel_indices[1]+1]
    ddq_i2 = X1[:,acc_indices[1]:acc_indices[1]+1]
    q_j2 = X2[:,pos_indices[1]:pos_indices[1]+1].transpose(1,0)
    dq_j2 = X2[:,vel_indices[1]:vel_indices[1]+1].transpose(1,0)
    ddq_j2 = X2[:,acc_indices[1]:acc_indices[1]+1].transpose(1,0)
    q_i3 = X1[:,pos_indices[2]:pos_indices[2]+1]
    dq_i3 = X1[:,vel_indices[2]:vel_indices[2]+1]
    ddq_i3 = X1[:,acc_indices[2]:acc_indices[2]+1]
    q_j3 = X2[:,pos_indices[2]:pos_indices[2]+1].transpose(1,0)
    dq_j3 = X2[:,vel_indices[2]:vel_indices[2]+1].transpose(1,0)
    ddq_j3 = X2[:,acc_indices[2]:acc_indices[2]+1].transpose(1,0)

    sigma_kin_v_1_1 = sigma_kin_vel_list[0][0]
    sigma_kin_p_1_1_s = sigma_kin_pos_list[0][0]
    sigma_kin_p_1_1_c = sigma_kin_pos_list[0][1]
    sigma_kin_p_1_1_off = sigma_kin_pos_list[0][2]
    sigma_pot_1_s = sigma_pot_list[0][0]
    sigma_pot_1_c = sigma_pot_list[0][1]
    sigma_pot_1_off = sigma_pot_list[0][2]
    sigma_kin_v_2_1 = sigma_kin_vel_list[1][0]
    sigma_kin_p_2_1_s = sigma_kin_pos_list[1][0]
    sigma_kin_p_2_1_c = sigma_kin_pos_list[1][1]
    sigma_kin_p_2_1_off = sigma_kin_pos_list[1][2]
    sigma_kin_v_2_2 = sigma_kin_vel_list[1][1]
    sigma_kin_p_2_2_s = sigma_kin_pos_list[2][0]
    sigma_kin_p_2_2_c = sigma_kin_pos_list[2][1]
    sigma_kin_p_2_2_off = sigma_kin_pos_list[2][2]
    sigma_pot_2_s = sigma_pot_list[1][0]
    sigma_pot_2_c = sigma_pot_list[1][1]
    sigma_pot_2_off = sigma_pot_list[1][2]
    sigma_kin_v_3_1 = sigma_kin_vel_list[2][0]
    sigma_kin_p_3_1_s = sigma_kin_pos_list[3][0]
    sigma_kin_p_3_1_c = sigma_kin_pos_list[3][1]
    sigma_kin_p_3_1_off = sigma_kin_pos_list[3][2]
    sigma_kin_v_3_2 = sigma_kin_vel_list[2][1]
    sigma_kin_p_3_2_s = sigma_kin_pos_list[4][0]
    sigma_kin_p_3_2_c = sigma_kin_pos_list[4][1]
    sigma_kin_p_3_2_off = sigma_kin_pos_list[4][2]
    sigma_kin_v_3_3 = sigma_kin_vel_list[2][2]
    sigma_kin_p_3_3_s = sigma_kin_pos_list[5][0]
    sigma_kin_p_3_3_c = sigma_kin_pos_list[5][1]
    sigma_kin_p_3_3_off = sigma_kin_pos_list[5][2]
    sigma_pot_3_s = sigma_pot_list[2][0]
    sigma_pot_3_c = sigma_pot_list[2][1]
    sigma_pot_3_off = sigma_pot_list[2][2]

    
    x0 = torch.sin(q_j1)
    x1 = torch.sin(q_i1)
    x2 = x0*x1
    x3 = torch.cos(q_i1)
    x4 = torch.cos(q_j1)
    x5 = x3*x4
    x6 = sigma_kin_v_1_1**2
    x7 = sigma_kin_p_1_1_c*x5 + sigma_kin_p_1_1_off + sigma_kin_p_1_1_s*x2
    x8 = x6*x7
    x9 = x8*(sigma_kin_p_1_1_c*x2 + sigma_kin_p_1_1_s*x5)
    x10 = dq_j1**2
    x11 = dq_i1**2
    x12 = 2*x11
    x13 = x10*x12
    x14 = x0*x3
    x15 = x1*x4
    x16 = sigma_kin_p_1_1_c*x14 - sigma_kin_p_1_1_s*x15
    x17 = sigma_kin_p_1_1_c*x15 - sigma_kin_p_1_1_s*x14
    x18 = x16*x17*x6
    x19 = torch.cos(q_i2)
    x20 = torch.cos(q_j2)
    x21 = x19*x20
    x22 = torch.sin(q_i2)
    x23 = torch.sin(q_j2)
    x24 = x22*x23
    x25 = sigma_pot_2_c*x21 + sigma_pot_2_off + sigma_pot_2_s*x24
    x26 = torch.cos(q_i3)
    x27 = torch.cos(q_j3)
    x28 = x26*x27
    x29 = torch.sin(q_i3)
    x30 = torch.sin(q_j3)
    x31 = x29*x30
    x32 = 1.0*sigma_pot_3_c*x28 + 1.0*sigma_pot_3_off + 1.0*sigma_pot_3_s*x31
    x33 = sigma_kin_p_2_1_c*x2 + sigma_kin_p_2_1_s*x5
    x34 = sigma_kin_p_2_2_c*x21 + sigma_kin_p_2_2_off + sigma_kin_p_2_2_s*x24
    x35 = x34**2
    x36 = sigma_kin_p_2_1_c*x5 + sigma_kin_p_2_1_off + sigma_kin_p_2_1_s*x2
    x37 = x35*x36
    x38 = x33*x37
    x39 = dq_i1*dq_j1
    x40 = dq_i2*dq_j2
    x41 = sigma_kin_v_2_1*x39 + sigma_kin_v_2_2*x40
    x42 = x41**2
    x43 = 2*x42
    x44 = sigma_kin_p_2_1_c*x14 - sigma_kin_p_2_1_s*x15
    x45 = sigma_kin_p_2_1_c*x15 - sigma_kin_p_2_1_s*x14
    x46 = x35*x44*x45
    x47 = 4*dq_j1
    x48 = sigma_kin_p_3_1_c*x14 - sigma_kin_p_3_1_s*x15
    x49 = sigma_kin_p_3_1_c*x5 + sigma_kin_p_3_1_off + sigma_kin_p_3_1_s*x2
    x50 = sigma_kin_p_3_2_c*x21 + sigma_kin_p_3_2_off + sigma_kin_p_3_2_s*x24
    x51 = x50**2
    x52 = sigma_kin_p_3_3_c*x27
    x53 = sigma_kin_p_3_3_s*x30
    x54 = sigma_kin_p_3_3_off + x26*x52 + x29*x53
    x55 = x54**2
    x56 = x51*x55
    x57 = x49*x56
    x58 = x48*x57
    x59 = dq_j3*sigma_kin_v_3_3
    x60 = ddq_i3*x59
    x61 = sigma_kin_v_3_1*x60
    x62 = x58*x61
    x63 = sigma_kin_p_3_1_c*x2 + sigma_kin_p_3_1_s*x5
    x64 = sigma_kin_v_3_1*x39
    x65 = sigma_kin_v_3_2*x40
    x66 = dq_i3*x59
    x67 = x65 + x66
    x68 = x64 + x67
    x69 = x68**2
    x70 = 2*x49
    x71 = sigma_kin_p_3_1_c*x15 - sigma_kin_p_3_1_s*x14
    x72 = x56*x71
    x73 = x48*x72
    x74 = 2*x69
    x75 = 8*dq_j1
    x76 = dq_i3*x54
    x77 = sigma_kin_v_3_1*x68
    x78 = x76*x77
    x79 = -x26*x53 + x29*x52
    x80 = x48*x79
    x81 = x49*x80
    x82 = x51*x81
    x83 = sigma_kin_v_2_1*sigma_kin_v_2_2
    x84 = x37*x83
    x85 = sigma_kin_v_3_1*sigma_kin_v_3_2
    x86 = x44*x84 + x58*x85
    x87 = ddq_i2*dq_j2
    x88 = x86*x87
    x89 = x49**2
    x90 = ddq_i3*x54
    x91 = x50*x90
    x92 = x20*x22
    x93 = x19*x23
    x94 = sigma_kin_p_3_2_c*x92 - sigma_kin_p_3_2_s*x93
    x95 = 2*dq_i2
    x96 = x94*x95
    x97 = dq_i3**2
    x98 = x79*x97
    x99 = 2*x50
    x100 = sigma_kin_v_3_1*x54
    x101 = ddq_j3*sigma_kin_v_3_3
    x102 = sigma_kin_v_2_1**2
    x103 = x102*x37
    x104 = sigma_kin_v_3_1**2
    x105 = x104*x48
    x106 = x103*x44 + x105*x57 + x16*x8
    x107 = sigma_kin_p_2_2_c*x92 - sigma_kin_p_2_2_s*x93
    x108 = sigma_kin_v_2_1*x41
    x109 = x107*x108
    x110 = x34*x36
    x111 = x110*x44
    x112 = x109*x111
    x113 = x49*x50
    x114 = x55*x77
    x115 = x113*x114
    x116 = x48*x94
    x117 = x115*x116
    x118 = x112 + x117
    x119 = x18*x39
    x120 = x39*x9
    x121 = x108*x46
    x122 = x108*x38
    x123 = x73*x77
    x124 = x57*x63
    x125 = x124*x77
    x126 = x121 + x122 + x123 + x125
    x127 = dq_i1*x95
    x128 = x45*x84
    x129 = x57*x71
    x130 = x129*x85
    x131 = x76*x79
    x132 = x131*x95
    x133 = x51*x89
    x134 = x133*x85
    x135 = x36**2
    x136 = x135*x35
    x137 = x56*x89
    x138 = x136*x83 + x137*x85
    x139 = x128 + x130
    x140 = x135*x34
    x141 = x140*x83
    x142 = x107*x141
    x143 = x89*x94
    x144 = x50*x55
    x145 = x144*x85
    x146 = x143*x145
    x147 = x142 + x146
    x148 = dq_i2**2
    x149 = 2*x148
    x150 = 2*ddq_j2
    x151 = x17*x8
    x152 = x103*x45
    x153 = x104*x129
    x154 = x104*x89
    x155 = x154*x79
    x156 = 2*dq_i1
    x157 = x156*x76
    x158 = x102*x140
    x159 = x144*x154
    x160 = x107*x158 + x159*x94
    x161 = 4*ddq_j1
    x162 = sigma_kin_v_3_2*x54
    x163 = x26*x30
    x164 = x27*x29
    x165 = sigma_kin_p_3_3_c*x163 - sigma_kin_p_3_3_s*x164
    x166 = x113*x165
    x167 = x162*x166
    x168 = -x167*x87
    x169 = x50*x71
    x170 = x169*x68
    x171 = x165*x54
    x172 = x156*x171
    x173 = x170*x172
    x174 = 2*x64 + x67
    x175 = x169*x172
    x176 = x49*x94
    x177 = x176*x95
    x178 = x171*x177
    x179 = ddq_i1*dq_j1
    x180 = 2*x179
    x181 = x113*x64
    x182 = x165*x79
    x183 = dq_i3*x182
    x184 = sigma_kin_p_3_3_c*x31 + sigma_kin_p_3_3_s*x28
    x185 = x184*x76
    x186 = x113*x68
    x187 = x182*x186
    x188 = x184*x186
    x189 = x49*x91
    x190 = x165*x59
    x191 = dq_i3*x187 + x188*x76 - x189*x190
    x192 = 4*x113
    x193 = dq_j3*x192
    x194 = sigma_kin_v_3_1*x193
    x195 = sigma_kin_p_3_2_c*x93 - sigma_kin_p_3_2_s*x92
    x196 = x195*x89
    x197 = x144*x196
    x198 = sigma_kin_p_2_2_c*x93 - sigma_kin_p_2_2_s*x92
    x199 = x110*x198*x45
    x200 = x108*x199
    x201 = x115*x195*x71
    x202 = x141*x198 + x145*x196
    x203 = x102*x39
    x204 = x104*x39
    x205 = x195*x55
    x206 = x205*x71
    x207 = x113*x206
    x208 = sigma_kin_p_2_2_c*x24 + sigma_kin_p_2_2_s*x21
    x209 = x135*x198
    x210 = x107*x209
    x211 = x140*x208
    x212 = x108*x211
    x213 = x109*x209
    x214 = sigma_kin_p_3_2_c*x24 + sigma_kin_p_3_2_s*x21
    x215 = x214*x89
    x216 = x144*x215
    x217 = x216*x77
    x218 = x143*x195
    x219 = x114*x218
    x220 = 4*dq_j2
    x221 = dq_j1*x11
    x222 = x105*x39
    x223 = x51*x70
    x224 = x107*x111
    x225 = x113*x55
    x226 = sigma_pot_1_c*x14 - sigma_pot_1_s*x15
    x227 = sigma_kin_v_3_2*x60
    x228 = x227*x58
    x229 = x55*x69
    x230 = sigma_kin_v_3_2*x68
    x231 = 8*dq_j2
    x232 = ddq_i1*dq_j2
    x233 = x232*x86
    x234 = sigma_kin_v_2_2**2
    x235 = x234*x37
    x236 = sigma_kin_v_3_2**2
    x237 = x235*x44 + x236*x58
    x238 = 4*ddq_i2*dq_j2**2
    x239 = x11*x161
    x240 = sigma_kin_v_2_2*x41
    x241 = x224*x240
    x242 = x116*x55
    x243 = sigma_kin_v_3_2*x186
    x244 = x241 + x242*x243
    x245 = x124*x230 + x230*x73 + x240*x38 + x240*x46
    x246 = dq_i1*dq_j2
    x247 = sigma_kin_v_3_2*x246
    x248 = x113*x185
    x249 = x113*x183
    x250 = x176*x68
    x251 = x134*x79
    x252 = ddq_i1*x138 - x12*x139 + x127*x142 + x127*x146 - x127*x147 - x157*x251
    x253 = x113*x85
    x254 = x202*x232
    x255 = x218*x55
    x256 = sigma_pot_1_c*x5 + sigma_pot_1_off + sigma_pot_1_s*x2
    x257 = x197*x227
    x258 = x196*x50
    x259 = x140*x234
    x260 = x144*x236
    x261 = x196*x260 + x198*x259
    x262 = x199*x240 + x206*x243
    x263 = x211*x240
    x264 = x210*x240
    x265 = x216*x230
    x266 = x230*x255
    x267 = x263 + x264 + x265 + x266
    x268 = 2*ddq_j1
    x269 = x107*x259
    x270 = x143*x260
    x271 = x133*x236
    x272 = 4*ddq_j2
    x273 = x100*x179
    x274 = -x166*x273
    x275 = x250*x95
    x276 = x171*x275
    x277 = x64 + 2*x65 + x66
    x278 = 2*x87
    x279 = sigma_kin_v_3_2*x193
    x280 = x234*x40
    x281 = x236*x40
    x282 = 1.0*sigma_pot_3_c*x164 - 1.0*sigma_pot_3_s*x163
    x283 = ddq_i1*x47
    x284 = sigma_kin_v_3_1*x283*x59
    x285 = 4*x58
    x286 = sigma_kin_v_3_2*x59*x87
    x287 = dq_i1*x54
    x288 = dq_i2*x251*x287
    x289 = sigma_kin_v_3_3**2
    x290 = dq_j3**2*x289
    x291 = ddq_i3*x290
    x292 = x51*x54
    x293 = 4*x68
    x294 = dq_i1*x59
    x295 = x293*x294
    x296 = 4*x69
    x297 = x292*x81
    x298 = dq_i2*x59
    x299 = 8*x186
    x300 = x66*x68
    x301 = 8*x300
    x302 = x127*x176
    x303 = x12*x169
    x304 = -ddq_i1*x49*x50 + x302 + x303
    x305 = sigma_kin_v_3_1*x225
    x306 = 2*x101
    x307 = x113*x214
    x308 = x287*x298
    x309 = ddq_i1*x113
    x310 = x54*x59
    x311 = x309*x310
    x312 = x176*x195
    x313 = x195*x79
    x314 = x113*x66
    x315 = x156*x314
    x316 = x195*x310
    x317 = x156*x186
    x318 = x220*x49
    x319 = x11*x310
    x320 = x310*x48
    x321 = x47*x50
    x322 = x184*x54
    x323 = x113*x322
    x324 = dq_i1*x66
    x325 = x171*x59
    x326 = x113*x182
    x327 = x188*x54
    x328 = 4*x197
    x329 = x54*x79
    x330 = x293*x298
    x331 = x258*x329
    x332 = x127*x169
    x333 = x149*x176
    x334 = -ddq_i2*x49*x50 + x332 + x333
    x335 = sigma_kin_v_3_2*x225
    x336 = x287*x63
    x337 = x113*x336
    x338 = ddq_i2*x113
    x339 = x310*x338
    x340 = x287*x48
    x341 = x169*x340
    x342 = x314*x95
    x343 = x186*x95
    x344 = x148*x310
    x345 = dq_i2*x66
    x346 = x162*x87
    x347 = 4*x133
    x348 = x133*x74
    x349 = x300*x347
    x350 = 8*x190*x68
    x351 = dq_i2*x54
    x352 = x113*x98
    x353 = x70*x91
    x354 = x113*x48
    x355 = x48*x59
    x356 = x48*x54
    x357 = 2*x352
    x358 = sigma_kin_v_3_3*x54
    x359 = x214*x351
    x360 = x113*x195
    x361 = x195*x59
    x362 = x195*x351
    x363 = x156*x195*x54
    
    K_block_list = []
    K_block_list.append(4*ddq_i1*x10*x106 - dq_i2*x118*x75 - x100*x101*x89*x99*(x76*x96 - x91 + x98*x99) + x13*x18 + x13*x9 + x150*(ddq_i2*x138 + x127*x128 + x127*x130 - x127*x139 - x132*x134 - x147*x149) + x161*(ddq_i1*(x102*x136 + x154*x56 + x6*x7**2) + x11*x151 + x11*x152 + x11*x153 - x12*(x151 + x152 + x153) - x127*x160 - x155*x157*x51) + x194*(-x100*x166*x180 + x168 - x173 + x174*x175 + x174*x178 + x181*x183 + x181*x185 + x191) + x220*(2*dq_i1*dq_i3*dq_j1*x104*x195*x50*x54*x79*x89 + 2*dq_i1*(x199*x203 + x200 + x201 + x204*x207) + dq_i2*(x154*x205*x39*x94 + x158*x208*x39 + x159*x214*x39 + x203*x210 + x212 + x213 + x217 + x219) + 2*dq_i3*sigma_kin_v_3_1*x195*x50*x54*x68*x79*x89 - x156*x200 - x156*x201 - x180*(x158*x198 + x159*x195) - x197*x61 - x202*x87) + x25*x32*(sigma_pot_1_c*x2 + sigma_pot_1_s*x5) + x38*x43 - 4*x39*(x119 + x120 + x126) + x43*x46 + x47*x62 + x47*x88 - x47*(dq_i1*x121 + dq_i1*x122 + dq_i1*x123 + dq_i1*x125 - dq_i1*(x103*x33*x39 + 2*x119 + 2*x120 + x124*x204 + x126 + x203*x46 + x222*x72) + x106*x180 - x131*x222*x223 + x18*x221 + x221*x9 - x223*x78*x80 + x62 + x88 - x95*(x118 + x203*x224 + x222*x225*x94)) + x56*x63*x69*x70 + x73*x74 - x75*x78*x82)
    K_block_list.append(4*dq_i1*dq_i3*sigma_kin_v_3_1*x101*x143*x144 - dq_i1*x220*x245 + x116*x192*x229 + x150*x252 + x160*x239 + x194*(dq_j2*x12*x162*x165*x169 - x167*x232 + x172*x176*x65 - x172*x250 + x247*x248 + x247*x249) + x220*x228 + x220*(dq_i1*dq_i2*dq_j2*(x141*x208 + x145*x215 + x210*x83 + x255*x85) + 2*dq_i1*dq_i3*dq_j2*sigma_kin_v_3_1*sigma_kin_v_3_2*x195*x50*x54*x79*x89 - dq_i1*x212 - dq_i1*x213 - dq_i1*x217 - dq_i1*x219 + 2*dq_j2*x11*(x199*x83 + x206*x253) - x254) + 4*x224*x42 + x226*x32*(sigma_pot_2_c*x92 - sigma_pot_2_s*x93) - x230*x231*x76*x82 + x233*x47 + x237*x238 - 8*x244*x40 + x47*(2*dq_i1*dq_i2*dq_j2*(x224*x83 + x242*x253) + 2*dq_i1*dq_i3*dq_j2*sigma_kin_v_3_1*sigma_kin_v_3_2*x48*x49*x51*x54*x79 + dq_j2*x11*(x124*x85 + x38*x83 + x46*x83 + x73*x85) - x112*x156 - x117*x156 - x233))
    K_block_list.append(-x101*x162*x223*(x157*x71 - x49*x90 + x70*x98) - x131*x230*x231*x258 + x210*x43 + x211*x43 + x215*x229*x99 + x220*x257 + x220*(2*dq_i1*(x199*x280 + x207*x281 + x262) + 2*dq_i2*dq_i3*dq_j2*x195*x236*x50*x54*x79*x89 - dq_i2*x263 - dq_i2*x264 - dq_i2*x265 - dq_i2*x266 + dq_i2*(x208*x259*x40 + x210*x280 + x215*x260*x40 + x255*x281 + x267) + 2*dq_i3*sigma_kin_v_3_2*x195*x50*x54*x68*x79*x89 - x179*x202 - x257 - x261*x278) + x238*x261 - 8*x246*x262 + x252*x268 + x254*x47 + x255*x74 + x256*x32*(sigma_pot_2_c*x24 + sigma_pot_2_s*x21) - 4*x267*x40 + x272*(ddq_i2*(x136*x234 + x137*x236) - x127*(x129*x236 + x235*x45) - x132*x271 + x148*x269 + x148*x270 - x149*(x269 + x270)) + x279*(-x167*x278 + x175*x277 + x178*x277 + x191 + x248*x65 + x249*x65 + x274 - x276) + x47*(dq_i1*(x124*x281 + x235*x33*x40 + x245 + x280*x46 + x281*x73) + 2*dq_i2*dq_i3*dq_j2*x236*x48*x49*x51*x54*x79 + 2*dq_i2*(x113*x242*x281 + x224*x280 + x244) + 2*dq_i3*sigma_kin_v_3_2*x48*x49*x51*x54*x68*x79 - x179*x86 - x228 - x237*x278 - x241*x95 - x243*x48*x55*x96))
    K_block_list.append(x100*x318*(-x195*x311 + x303*x316 + x307*x308 + x308*x312 + x313*x315 - x313*x317) + x100*x321*(x113*x319*x63 + x169*x319*x48 + x302*x320 - x311*x48 + x315*x80 - x317*x80) - x124*x295 + x155*x239*x292 + x194*(-dq_i1*x187 - dq_i1*x327 + x302*x325 + x303*x325 - x309*x325 + x323*x324 + x324*x326) + x226*x25*x282 - x242*x298*x299 + x272*x288 + x284*x58 + x285*x286 + x285*x291 - x295*x73 + x296*x297 - x297*x301 - x304*x305*x306)
    K_block_list.append(x148*x271*x272*x329 + x161*x288 + x162*x318*(-x195*x339 + x307*x344 + x312*x344 + x313*x342 - x313*x343 + x316*x332) + x162*x321*(x298*x337 + x298*x341 + x320*x333 - x339*x48 + x342*x80 - x343*x80) + x197*x284 - x206*x294*x299 - x216*x330 - x255*x330 + x256*x282*(sigma_pot_2_c*x93 - sigma_pot_2_s*x92) + x279*(-dq_i2*x187 - dq_i2*x327 + x323*x345 + x325*x332 + x325*x333 - x325*x338 + x326*x345) + x286*x328 + x291*x328 + x296*x331 - x301*x331 - x306*x334*x335)
    K_block_list.append(-ddq_j3*x192*x289*x54*(x157*x169 + x177*x76 - x189 + x352) - sigma_kin_v_3_3*x150*x334*x335 - sigma_kin_v_3_3*x268*x304*x305 + x100*x133*x190*x283 - x143*x350*x351*x50 + x165*x290*x347*x90 + x182*x348 - x182*x349 + x190*x346*x347 + x192*x59*(x168 + x173 + x175*x66 + x178*x66 + x190*x352 - x190*x353 + x274 + x276 + x323*x59*x97) + 1.0*x25*x256*(sigma_pot_3_c*x31 + sigma_pot_3_s*x28) - x287*x350*x49*x51*x71 + x318*x358*(x169*x363*x66 + x170*x363 + x176*x362*x66 + x186*x359 + x250*x362 - x273*x360 + x314*x359 - x346*x360 - x353*x361 + x357*x361) + x321*x358*(x170*x340 + x177*x356*x66 + x186*x336 - x273*x354 + x275*x356 + x337*x66 + x341*x66 - x346*x354 - x353*x355 + x355*x357) + x322*x348 - x322*x349)
    
    return K_block_list

