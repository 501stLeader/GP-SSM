import torch

def get_K_blocks_GIP_sum_PANDA_3dof_no_subs(X1, X2, pos_indices, vel_indices, acc_indices, sigma_kin_vel_list, sigma_kin_pos_list, sigma_pot_list):

    q_i1 = X1[:,pos_indices[0]:pos_indices[0]+1]
    dq_i1 = X1[:,vel_indices[0]:vel_indices[0]+1]
    ddq_i1 = X1[:,acc_indices[0]:acc_indices[0]+1]
    q_j1 = X2[:,pos_indices[0]:pos_indices[0]+1]
    dq_j1 = X2[:,vel_indices[0]:vel_indices[0]+1]
    ddq_j1 = X2[:,acc_indices[0]:acc_indices[0]+1]
    q_i2 = X1[:,pos_indices[1]:pos_indices[1]+1]
    dq_i2 = X1[:,vel_indices[1]:vel_indices[1]+1]
    ddq_i2 = X1[:,acc_indices[1]:acc_indices[1]+1]
    q_j2 = X2[:,pos_indices[1]:pos_indices[1]+1]
    dq_j2 = X2[:,vel_indices[1]:vel_indices[1]+1]
    ddq_j2 = X2[:,acc_indices[1]:acc_indices[1]+1]
    q_i3 = X1[:,pos_indices[2]:pos_indices[2]+1]
    dq_i3 = X1[:,vel_indices[2]:vel_indices[2]+1]
    ddq_i3 = X1[:,acc_indices[2]:acc_indices[2]+1]
    q_j3 = X2[:,pos_indices[2]:pos_indices[2]+1]
    dq_j3 = X2[:,vel_indices[2]:vel_indices[2]+1]
    ddq_j3 = X2[:,acc_indices[2]:acc_indices[2]+1]

    sigma_kin_v_1_1 = sigma_kin_vel_list[0][0]
    sigma_kin_p_1_1_s = sigma_kin_pos_list[0][0]
    sigma_kin_p_1_1_c = sigma_kin_pos_list[0][1]
    sigma_kin_p_1_1_off = sigma_kin_pos_list[0][2]
    sigma_pot_1_s = sigma_pot_list[0][0]
    sigma_pot_1_c = sigma_pot_list[0][1]
    sigma_pot_1_off = sigma_pot_list[0][2]
    sigma_kin_v_2_1 = sigma_kin_vel_list[1][0]
    sigma_kin_p_2_1_s = sigma_kin_pos_list[1][0]
    sigma_kin_p_2_1_c = sigma_kin_pos_list[1][1]
    sigma_kin_p_2_1_off = sigma_kin_pos_list[1][2]
    sigma_kin_v_2_2 = sigma_kin_vel_list[1][1]
    sigma_kin_p_2_2_s = sigma_kin_pos_list[2][0]
    sigma_kin_p_2_2_c = sigma_kin_pos_list[2][1]
    sigma_kin_p_2_2_off = sigma_kin_pos_list[2][2]
    sigma_pot_2_s = sigma_pot_list[1][0]
    sigma_pot_2_c = sigma_pot_list[1][1]
    sigma_pot_2_off = sigma_pot_list[1][2]
    sigma_kin_v_3_1 = sigma_kin_vel_list[2][0]
    sigma_kin_p_3_1_s = sigma_kin_pos_list[3][0]
    sigma_kin_p_3_1_c = sigma_kin_pos_list[3][1]
    sigma_kin_p_3_1_off = sigma_kin_pos_list[3][2]
    sigma_kin_v_3_2 = sigma_kin_vel_list[2][1]
    sigma_kin_p_3_2_s = sigma_kin_pos_list[4][0]
    sigma_kin_p_3_2_c = sigma_kin_pos_list[4][1]
    sigma_kin_p_3_2_off = sigma_kin_pos_list[4][2]
    sigma_kin_v_3_3 = sigma_kin_vel_list[2][2]
    sigma_kin_p_3_3_s = sigma_kin_pos_list[5][0]
    sigma_kin_p_3_3_c = sigma_kin_pos_list[5][1]
    sigma_kin_p_3_3_off = sigma_kin_pos_list[5][2]
    sigma_pot_3_s = sigma_pot_list[2][0]
    sigma_pot_3_c = sigma_pot_list[2][1]
    sigma_pot_3_off = sigma_pot_list[2][2]

    
    x0 = torch.sin(q_j1)
    x1 = torch.sin(q_i1)
    x2 = x0*x1
    x3 = torch.cos(q_i1)
    x4 = torch.cos(q_j1)
    x5 = x3*x4
    x6 = sigma_kin_v_1_1**2
    x7 = sigma_kin_p_1_1_c*x5 + sigma_kin_p_1_1_off + sigma_kin_p_1_1_s*x2
    x8 = x6*x7
    x9 = x8*(sigma_kin_p_1_1_c*x2 + sigma_kin_p_1_1_s*x5)
    x10 = dq_j1**2
    x11 = dq_i1**2
    x12 = 2*x11
    x13 = x10*x12
    x14 = x0*x3
    x15 = x1*x4
    x16 = sigma_kin_p_1_1_c*x14 - sigma_kin_p_1_1_s*x15
    x17 = sigma_kin_p_1_1_c*x15 - sigma_kin_p_1_1_s*x14
    x18 = x16*x17*x6
    x19 = torch.cos(q_i2)
    x20 = torch.cos(q_j2)
    x21 = x19*x20
    x22 = torch.sin(q_i2)
    x23 = torch.sin(q_j2)
    x24 = x22*x23
    x25 = sigma_pot_2_c*x21 + sigma_pot_2_off + sigma_pot_2_s*x24
    x26 = torch.cos(q_i3)
    x27 = torch.cos(q_j3)
    x28 = x26*x27
    x29 = torch.sin(q_i3)
    x30 = torch.sin(q_j3)
    x31 = x29*x30
    x32 = 1.0*sigma_pot_3_c*x28 + 1.0*sigma_pot_3_off + 1.0*sigma_pot_3_s*x31
    x33 = sigma_kin_p_2_1_c*x2 + sigma_kin_p_2_1_s*x5
    x34 = sigma_kin_p_2_2_c*x21 + sigma_kin_p_2_2_off + sigma_kin_p_2_2_s*x24
    x35 = x34**2
    x36 = sigma_kin_p_2_1_c*x5 + sigma_kin_p_2_1_off + sigma_kin_p_2_1_s*x2
    x37 = x35*x36
    x38 = x33*x37
    x39 = dq_i1*dq_j1
    x40 = dq_i2*dq_j2
    x41 = sigma_kin_v_2_1*x39 + sigma_kin_v_2_2*x40
    x42 = 2*x41**2
    x43 = sigma_kin_p_2_1_c*x14 - sigma_kin_p_2_1_s*x15
    x44 = sigma_kin_p_2_1_c*x15 - sigma_kin_p_2_1_s*x14
    x45 = x35*x43*x44
    x46 = 4*dq_j1
    x47 = dq_j3*sigma_kin_v_3_3
    x48 = ddq_i3*x47
    x49 = sigma_kin_v_3_1*x48
    x50 = sigma_kin_p_3_2_c*x21 + sigma_kin_p_3_2_off + sigma_kin_p_3_2_s*x24
    x51 = x50**2
    x52 = sigma_kin_p_3_1_c*x14 - sigma_kin_p_3_1_s*x15
    x53 = sigma_kin_p_3_1_c*x5 + sigma_kin_p_3_1_off + sigma_kin_p_3_1_s*x2
    x54 = sigma_kin_p_3_3_c*x27
    x55 = sigma_kin_p_3_3_s*x30
    x56 = sigma_kin_p_3_3_off + x26*x54 + x29*x55
    x57 = x56**2
    x58 = x53*x57
    x59 = x52*x58
    x60 = x51*x59
    x61 = x49*x60
    x62 = sigma_kin_p_3_1_c*x2 + sigma_kin_p_3_1_s*x5
    x63 = sigma_kin_v_3_1*x39
    x64 = sigma_kin_v_3_2*x40
    x65 = dq_i3*x47
    x66 = x64 + x65
    x67 = x63 + x66
    x68 = x67**2
    x69 = 2*x53
    x70 = x51*x57
    x71 = sigma_kin_p_3_1_c*x15 - sigma_kin_p_3_1_s*x14
    x72 = x52*x71
    x73 = x70*x72
    x74 = 2*x68
    x75 = -x26*x55 + x29*x54
    x76 = 8*dq_j1
    x77 = dq_i3*x56
    x78 = sigma_kin_v_3_1*x67
    x79 = x51*x78
    x80 = sigma_kin_v_2_1*sigma_kin_v_2_2
    x81 = x37*x80
    x82 = sigma_kin_v_3_1*sigma_kin_v_3_2
    x83 = x51*x82
    x84 = x43*x81 + x59*x83
    x85 = ddq_i2*dq_j2
    x86 = x84*x85
    x87 = x53**2
    x88 = ddq_i3*x56
    x89 = x50*x88
    x90 = x20*x22
    x91 = x19*x23
    x92 = sigma_kin_p_3_2_c*x90 - sigma_kin_p_3_2_s*x91
    x93 = 2*dq_i2
    x94 = x92*x93
    x95 = dq_i3**2
    x96 = x75*x95
    x97 = 2*x50
    x98 = sigma_kin_v_3_3*x56
    x99 = ddq_j3*x98
    x100 = sigma_kin_v_2_1**2
    x101 = x100*x37
    x102 = sigma_kin_v_3_1**2
    x103 = x102*x51
    x104 = x103*x52
    x105 = x101*x43 + x104*x58 + x16*x8
    x106 = sigma_kin_p_2_2_c*x90 - sigma_kin_p_2_2_s*x91
    x107 = sigma_kin_v_2_1*x41
    x108 = x106*x107
    x109 = x34*x36
    x110 = x109*x43
    x111 = x78*x92
    x112 = x50*x53
    x113 = x52*x57
    x114 = x112*x113
    x115 = x108*x110 + x111*x114
    x116 = x18*x39
    x117 = x39*x9
    x118 = x107*x45
    x119 = x107*x38
    x120 = x73*x78
    x121 = x58*x62
    x122 = x121*x79
    x123 = x118 + x119 + x120 + x122
    x124 = dq_i1*x93
    x125 = x44*x81
    x126 = x58*x71
    x127 = x126*x83
    x128 = x75*x87
    x129 = x128*x77
    x130 = x129*x93
    x131 = x36**2
    x132 = x131*x35
    x133 = x57*x87
    x134 = x133*x51
    x135 = x132*x80 + x134*x82
    x136 = x125 + x127
    x137 = x131*x34
    x138 = x137*x80
    x139 = x106*x138
    x140 = x133*x50
    x141 = x140*x92
    x142 = x141*x82
    x143 = x139 + x142
    x144 = dq_i2**2
    x145 = 2*x144
    x146 = 2*ddq_j2
    x147 = x17*x8
    x148 = x101*x44
    x149 = x103*x126
    x150 = 2*dq_i1
    x151 = x150*x77
    x152 = x128*x151
    x153 = x100*x137
    x154 = x102*x92
    x155 = sigma_kin_p_3_3_c*x26*x30 - sigma_kin_p_3_3_s*x27*x29
    x156 = x155*x56
    x157 = x112*x156
    x158 = sigma_kin_v_3_2*x85
    x159 = -x157*x158
    x160 = x50*x71
    x161 = x160*x67
    x162 = x150*x156
    x163 = x161*x162
    x164 = 2*x63 + x66
    x165 = x160*x162
    x166 = x53*x92
    x167 = x166*x93
    x168 = x156*x167
    x169 = ddq_i1*dq_j1
    x170 = 2*x169
    x171 = x155*x75
    x172 = dq_i3*x171
    x173 = x112*x63
    x174 = sigma_kin_p_3_3_c*x31 + sigma_kin_p_3_3_s*x28
    x175 = x174*x77
    x176 = x112*x67
    x177 = x53*x89
    x178 = x155*x47
    x179 = x172*x176 + x175*x176 - x177*x178
    x180 = 4*x112
    x181 = dq_j3*x180
    x182 = sigma_kin_p_3_2_c*x91 - sigma_kin_p_3_2_s*x90
    x183 = x140*x182
    x184 = sigma_kin_p_2_2_c*x91 - sigma_kin_p_2_2_s*x90
    x185 = x109*x184*x44
    x186 = x107*x185
    x187 = x57*x71
    x188 = x182*x187
    x189 = x112*x188
    x190 = x189*x78
    x191 = x138*x184 + x183*x82
    x192 = x100*x39
    x193 = x102*x39
    x194 = sigma_kin_p_2_2_c*x24 + sigma_kin_p_2_2_s*x21
    x195 = x131*x184
    x196 = x106*x195
    x197 = x137*x194
    x198 = sigma_kin_p_3_2_c*x24 + sigma_kin_p_3_2_s*x21
    x199 = x140*x198
    x200 = x133*x182
    x201 = x154*x39
    x202 = 4*dq_j2
    x203 = dq_j1*x11
    x204 = x104*x39
    x205 = x69*x75*x77
    x206 = x106*x110
    x207 = sigma_pot_1_c*x5 + sigma_pot_1_off + sigma_pot_1_s*x2
    x208 = sigma_kin_v_3_2*x48
    x209 = x183*x208
    x210 = x200*x92
    x211 = 8*dq_j2
    x212 = sigma_kin_v_3_2*x67
    x213 = ddq_i1*x46
    x214 = sigma_kin_v_2_2**2
    x215 = x137*x214
    x216 = sigma_kin_v_3_2**2
    x217 = x183*x216 + x184*x215
    x218 = sigma_kin_v_2_2*x41
    x219 = sigma_kin_v_3_2*x176
    x220 = x185*x218 + x188*x219
    x221 = x197*x218
    x222 = x196*x218
    x223 = x199*x212
    x224 = x210*x212
    x225 = x221 + x222 + x223 + x224
    x226 = 2*ddq_j1
    x227 = x106*x215
    x228 = x141*x216
    x229 = x216*x51
    x230 = x214*x37
    x231 = sigma_kin_v_3_1*x169
    x232 = -x157*x231
    x233 = x166*x67
    x234 = x233*x93
    x235 = x156*x234
    x236 = x63 + 2*x64 + x65
    x237 = 2*x85
    x238 = x112*x64
    x239 = x206*x218
    x240 = x113*x219
    x241 = x214*x40
    x242 = x216*x40
    x243 = x229*x40
    x244 = x51*x87
    x245 = x156*x47
    x246 = 4*x244
    x247 = sigma_kin_v_3_3**2
    x248 = x244*x74
    x249 = x174*x56
    x250 = x246*x65*x67
    x251 = dq_i1*x56
    x252 = 8*x178*x67
    x253 = dq_i2*x56
    x254 = sigma_kin_v_3_3*x112*x57
    x255 = x112*x96
    x256 = x69*x89
    x257 = x251*x62
    x258 = x112*x65
    x259 = x52*x56
    x260 = x112*x259
    x261 = x47*x52
    x262 = x251*x52
    x263 = x160*x65
    x264 = 2*x255
    x265 = x198*x253
    x266 = x182*x56
    x267 = x112*x266
    x268 = x182*x47
    x269 = x182*x253
    x270 = x150*x266
    
    K_block_list = []
    K_block_list.append(4*ddq_i1*x10*x105 + 4*ddq_j1*(ddq_i1*(x100*x132 + x103*x133 + x6*x7**2) - x103*x152 + x11*x147 + x11*x148 + x11*x149 - x12*(x147 + x148 + x149) - x124*(x106*x153 + x140*x154)) - dq_i2*x115*x76 + sigma_kin_v_3_1*x181*(-sigma_kin_v_3_1*x157*x170 + x159 - x163 + x164*x165 + x164*x168 + x172*x173 + x173*x175 + x179) - sigma_kin_v_3_1*x87*x97*x99*(x77*x94 - x89 + x96*x97) + x13*x18 + x13*x9 + x146*(ddq_i2*x135 + x124*x125 + x124*x127 - x124*x136 - x130*x83 - x143*x145) + x202*(2*dq_i1*dq_i3*dq_j1*x102*x182*x50*x56*x75*x87 + 2*dq_i1*(x185*x192 + x186 + x189*x193 + x190) + dq_i2*(x107*x197 + x108*x195 + x111*x200 + x153*x194*x39 + x192*x196 + x193*x199 + x199*x78 + x200*x201) + 2*dq_i3*sigma_kin_v_3_1*x182*x50*x56*x67*x75*x87 - x150*x186 - x150*x190 - x170*(x102*x183 + x153*x184) - x183*x49 - x191*x85) + x25*x32*(sigma_pot_1_c*x2 + sigma_pot_1_s*x5) + x38*x42 - 4*x39*(x116 + x117 + x123) + x42*x45 + x46*x61 + x46*x86 - x46*(dq_i1*x118 + dq_i1*x119 + dq_i1*x120 + dq_i1*x122 - dq_i1*(x101*x33*x39 + x103*x121*x39 + 2*x116 + 2*x117 + x123 + x187*x204 + x192*x45) + x105*x170 + x18*x203 + x203*x9 - x204*x205 - x205*x52*x79 + x61 + x86 - x93*(x114*x201 + x115 + x192*x206)) - x52*x53*x75*x76*x77*x79 + x62*x68*x69*x70 + x73*x74)
    K_block_list.append(4*ddq_i2*dq_j2**2*x217 + 4*ddq_j2*(ddq_i2*(x132*x214 + x134*x216) - x124*(x126*x229 + x230*x44) - x130*x229 + x144*x227 + x144*x228 - x145*(x227 + x228)) - dq_i1*x211*x220 + dq_j2*x191*x213 + sigma_kin_v_3_2*x181*(-sigma_kin_v_3_2*x157*x237 + x165*x236 + x168*x236 + x172*x238 + x175*x238 + x179 + x232 - x235) - sigma_kin_v_3_2*x51*x69*x99*(x151*x71 - x53*x88 + x69*x96) - x129*x182*x211*x212*x50 + x133*x198*x68*x97 + x196*x42 + x197*x42 + x202*x209 + x202*(2*dq_i1*(x185*x241 + x189*x242 + x220) + 2*dq_i2*dq_i3*dq_j2*x182*x216*x50*x56*x75*x87 - dq_i2*x221 - dq_i2*x222 - dq_i2*x223 - dq_i2*x224 + dq_i2*(x194*x215*x40 + x196*x241 + x199*x242 + x210*x242 + x225) + 2*dq_i3*sigma_kin_v_3_2*x182*x50*x56*x67*x75*x87 - x169*x191 - x209 - x217*x237) + x207*x32*(sigma_pot_2_c*x24 + sigma_pot_2_s*x21) + x210*x74 - 4*x225*x40 + x226*(ddq_i1*x135 - x12*x136 + x124*x139 + x124*x142 - x124*x143 - x152*x83) + x46*(dq_i1*(x121*x212*x51 + x121*x243 + x212*x73 + x218*x38 + x218*x45 + x230*x33*x40 + x241*x45 + x243*x57*x72) + 2*dq_i2*dq_i3*dq_j2*x216*x51*x52*x53*x56*x75 + 2*dq_i2*(x114*x242*x92 + x206*x241 + x239 + x240*x92) + 2*dq_i3*sigma_kin_v_3_2*x51*x52*x53*x56*x67*x75 - x169*x84 - x208*x60 - x237*(x229*x59 + x230*x43) - x239*x93 - x240*x94))
    K_block_list.append(-ddq_j3*x180*x247*x56*(x151*x160 + x167*x77 - x177 + x255) + dq_j3**2*x155*x246*x247*x88 + sigma_kin_v_3_1*x213*x244*x245 - sigma_kin_v_3_1*x226*x254*(-ddq_i1*x112 + x12*x160 + x124*x166) - sigma_kin_v_3_2*x146*x254*(-ddq_i2*x112 + x124*x160 + x145*x166) + x158*x245*x246 + x171*x248 - x171*x250 + x180*x47*(x112*x249*x47*x95 + x159 + x163 + x165*x65 + x168*x65 + x178*x255 - x178*x256 + x232 + x235) + x202*x53*x98*(-x158*x267 + x161*x270 + x166*x269*x65 + x176*x265 - x231*x267 + x233*x269 - x256*x268 + x258*x265 + x263*x270 + x264*x268) + 1.0*x207*x25*(sigma_pot_3_c*x31 + sigma_pot_3_s*x28) + x248*x249 - x249*x250 - x251*x252*x51*x53*x71 - x252*x253*x50*x87*x92 + x46*x50*x98*(-x158*x260 + x161*x262 + x167*x259*x65 + x176*x257 - x231*x260 + x234*x259 - x256*x261 + x257*x258 + x261*x264 + x262*x263))
    
    return K_block_list

