import torch

def get_K_blocks_RBF_1_sc_4dof_no_subs(X1, X2, pos_indices, vel_indices, acc_indices, lL, sL):

    q_i1 = X1[:,pos_indices[0]:pos_indices[0]+1]
    dq_i1 = X1[:,vel_indices[0]:vel_indices[0]+1]
    ddq_i1 = X1[:,acc_indices[0]:acc_indices[0]+1]
    q_j1 = X2[:,pos_indices[0]:pos_indices[0]+1]
    dq_j1 = X2[:,vel_indices[0]:vel_indices[0]+1]
    ddq_j1 = X2[:,acc_indices[0]:acc_indices[0]+1]
    q_i2 = X1[:,pos_indices[1]:pos_indices[1]+1]
    dq_i2 = X1[:,vel_indices[1]:vel_indices[1]+1]
    ddq_i2 = X1[:,acc_indices[1]:acc_indices[1]+1]
    q_j2 = X2[:,pos_indices[1]:pos_indices[1]+1]
    dq_j2 = X2[:,vel_indices[1]:vel_indices[1]+1]
    ddq_j2 = X2[:,acc_indices[1]:acc_indices[1]+1]
    q_i3 = X1[:,pos_indices[2]:pos_indices[2]+1]
    dq_i3 = X1[:,vel_indices[2]:vel_indices[2]+1]
    ddq_i3 = X1[:,acc_indices[2]:acc_indices[2]+1]
    q_j3 = X2[:,pos_indices[2]:pos_indices[2]+1]
    dq_j3 = X2[:,vel_indices[2]:vel_indices[2]+1]
    ddq_j3 = X2[:,acc_indices[2]:acc_indices[2]+1]
    q_i4 = X1[:,pos_indices[3]:pos_indices[3]+1]
    dq_i4 = X1[:,vel_indices[3]:vel_indices[3]+1]
    ddq_i4 = X1[:,acc_indices[3]:acc_indices[3]+1]
    q_j4 = X2[:,pos_indices[3]:pos_indices[3]+1]
    dq_j4 = X2[:,vel_indices[3]:vel_indices[3]+1]
    ddq_j4 = X2[:,acc_indices[3]:acc_indices[3]+1]

    lL1 = lL[0]
    lL5 = lL[4]
    lL9 = lL[8]
    lL2 = lL[1]
    lL6 = lL[5]
    lL10 = lL[9]
    lL3 = lL[2]
    lL7 = lL[6]
    lL11 = lL[10]
    lL4 = lL[3]
    lL8 = lL[7]
    lL12 = lL[11]

    
    x0 = torch.sin(q_i1)
    x1 = torch.sin(q_j1)
    x2 = lL1**(-2.0)
    x3 = torch.cos(q_i1)
    x4 = torch.cos(q_j1)
    x5 = lL5**(-2.0)
    x6 = lL9**(-2.0)
    x7 = dq_i1 - dq_j1
    x8 = x0*x1*x2 + x3*x4*x5
    x9 = dq_i2 - dq_j2
    x10 = lL10**(-2.0)
    x11 = ddq_i2*x10
    x12 = x11*x9
    x13 = x0 - x1
    x14 = x13*x5
    x15 = x3 - x4
    x16 = x15*x2
    x17 = -x1*x16 + x14*x4
    x18 = 4*x17*x6
    x19 = x18*x7
    x20 = dq_i3 - dq_j3
    x21 = lL11**(-2.0)
    x22 = ddq_i3*x21
    x23 = x20*x22
    x24 = dq_i4 - dq_j4
    x25 = lL12**(-2.0)
    x26 = ddq_i4*x25
    x27 = x24*x26
    x28 = x7**2
    x29 = x28*x6
    x30 = 2*x29
    x31 = -x30
    x32 = -x0*x16 + x14*x3
    x33 = 2*x32
    x34 = x17*x33
    x35 = dq_i1*x7
    x36 = x32*x35
    x37 = torch.sin(q_i2)
    x38 = torch.sin(q_j2)
    x39 = x37 - x38
    x40 = lL6**(-2.0)
    x41 = torch.cos(q_i2)
    x42 = x40*x41
    x43 = torch.cos(q_j2)
    x44 = x41 - x43
    x45 = lL2**(-2.0)
    x46 = x37*x45
    x47 = x39*x42 - x44*x46
    x48 = dq_i2*x47
    x49 = torch.sin(q_i3)
    x50 = torch.sin(q_j3)
    x51 = x49 - x50
    x52 = lL7**(-2.0)
    x53 = torch.cos(q_i3)
    x54 = x52*x53
    x55 = torch.cos(q_j3)
    x56 = x53 - x55
    x57 = lL3**(-2.0)
    x58 = x49*x57
    x59 = x51*x54 - x56*x58
    x60 = dq_i3*x59
    x61 = torch.sin(q_i4)
    x62 = torch.sin(q_j4)
    x63 = x61 - x62
    x64 = lL8**(-2.0)
    x65 = torch.cos(q_i4)
    x66 = x64*x65
    x67 = torch.cos(q_j4)
    x68 = x65 - x67
    x69 = lL4**(-2.0)
    x70 = x61*x69
    x71 = x63*x66 - x68*x70
    x72 = dq_i4*x71
    x73 = x33*x9
    x74 = 2*x9
    x75 = x23*x74
    x76 = x9**2
    x77 = x10*x76
    x78 = 4*x29
    x79 = x77*x78
    x80 = dq_i1*x32
    x81 = x78*x9
    x82 = -x9
    x83 = 2*x82
    x84 = x31 + 3
    x85 = -x7
    x86 = ddq_i1*x6
    x87 = x84*x85*x86
    x88 = -ddq_i2
    x89 = 2*x77
    x90 = ddq_i2*x89
    x91 = dq_i1*x73
    x92 = 2*x47
    x93 = dq_i2*x92
    x94 = x9*x93
    x95 = 2*x59
    x96 = dq_i3*x95
    x97 = x9*x96
    x98 = 2*x71
    x99 = dq_i4*x98
    x100 = x9*x99
    x101 = x100 + x27*x74 + x88 + x90 + x91 + x94 + x97
    x102 = 2*x6
    x103 = x20*x33
    x104 = 2*x20
    x105 = x104*x12
    x106 = x20**2
    x107 = x106*x21
    x108 = ddq_i3*x107
    x109 = x20*x78
    x110 = -x20
    x111 = 2*x87
    x112 = -ddq_i3
    x113 = 2*x107
    x114 = ddq_i3*x113
    x115 = dq_i1*x103
    x116 = x20*x93
    x117 = x20*x96
    x118 = x20*x99
    x119 = x104*x27 + x112 + x114 + x115 + x116 + x117 + x118
    x120 = ddq_j3*x21
    x121 = x24*x33
    x122 = 2*x24
    x123 = x12*x122
    x124 = x24**2
    x125 = x124*x25
    x126 = ddq_i4*x125
    x127 = x24*x78
    x128 = -x24
    x129 = -ddq_i4
    x130 = 2*x125
    x131 = ddq_i4*x130
    x132 = dq_i1*x121
    x133 = x24*x93
    x134 = x24*x96
    x135 = x24*x99
    x136 = x122*x23 + x129 + x131 + x132 + x133 + x134 + x135
    x137 = ddq_j4*x25
    x138 = x85**2
    x139 = 4/lL9**4
    x140 = x139*x7**3
    x141 = 6*x6
    x142 = x141*x7
    x143 = -x38*x44*x45 + x39*x40*x43
    x144 = 2*x143
    x145 = x144*x23
    x146 = x38*x46 + x42*x43
    x147 = dq_i2*x146
    x148 = x7*x86
    x149 = x144*x148
    x150 = -dq_i2*x146
    x151 = dq_i1*x143*x33
    x152 = x143*x92
    x153 = dq_i2*x152
    x154 = x143*x96
    x155 = x143*x99
    x156 = x12*x144
    x157 = x144*x27
    x158 = x150 + x151 + x153 + x154 + x155 + x156 + x157
    x159 = -x50*x56*x57 + x51*x52*x55
    x160 = 2*x159
    x161 = x12*x160
    x162 = x50*x58 + x54*x55
    x163 = dq_i3*x162
    x164 = x148*x160
    x165 = -dq_i3*x162
    x166 = dq_i1*x159*x33
    x167 = x159*x93
    x168 = x159*x95
    x169 = dq_i3*x168
    x170 = x159*x99
    x171 = x160*x23
    x172 = x160*x27
    x173 = x165 + x166 + x167 + x169 + x170 + x171 + x172
    x174 = -x62*x68*x69 + x63*x64*x67
    x175 = 2*x174
    x176 = x12*x175
    x177 = x62*x70 + x66*x67
    x178 = dq_i4*x177
    x179 = x148*x175
    x180 = -dq_i4*x177
    x181 = dq_i1*x174*x33
    x182 = x174*x93
    x183 = x174*x96
    x184 = x174*x98
    x185 = dq_i4*x184
    x186 = x175*x23
    x187 = x175*x27
    x188 = x180 + x181 + x182 + x183 + x185 + x186 + x187
    x189 = 2*x17
    x190 = x189*x27
    x191 = dq_i1*x8
    x192 = x189*x7*x86
    x193 = -dq_i1*x8
    x194 = dq_i1*x34
    x195 = x17*x93
    x196 = x17*x96
    x197 = x17*x99
    x198 = x189*x23
    x199 = x12*x189
    x200 = x193 + x194 + x195 + x196 + x197 + x198 + x199
    x201 = 2*sL*torch.exp(-x107 - x125 - x13**2*x5 - x15**2*x2 - x29 - x39**2*x40 - x44**2*x45 - x51**2*x52 - x56**2*x57 - x63**2*x64 - x68**2*x69 - x77)
    x202 = x10*x9
    x203 = 4*x143*x202
    x204 = -x89
    x205 = x9*x92
    x206 = 2*x7
    x207 = x206*x23
    x208 = -x207
    x209 = x204 + 3
    x210 = x12*x206
    x211 = 4*x77
    x212 = x211*x7
    x213 = -ddq_i1*x30
    x214 = -x33*x35
    x215 = -x7*x93
    x216 = -x7*x96
    x217 = -x7*x99
    x218 = x206*x27
    x219 = ddq_i1 + x213 + x214 + x215 + x216 + x217 - x218
    x220 = x104*x148
    x221 = x20*x211
    x222 = x110*x83
    x223 = x11*x209
    x224 = 2*x10
    x225 = x122*x148
    x226 = x211*x24
    x227 = x128*x83
    x228 = x82**2
    x229 = 4/lL10**4
    x230 = x229*x9**3
    x231 = 6*x80
    x232 = 6*x202
    x233 = ddq_j2*x224
    x234 = x190 + x192 + x193 + x194 + x195 + x196 + x197
    x235 = x145 + x149 + x150 + x151 + x153 + x154 + x155
    x236 = x20*x21
    x237 = 4*x159*x236
    x238 = -x113
    x239 = x20*x95
    x240 = -x210
    x241 = x238 + 3
    x242 = ddq_i1*x78
    x243 = 4*x107
    x244 = x243*x7
    x245 = x148*x74
    x246 = ddq_i2*x211
    x247 = x243*x9
    x248 = x22*x241
    x249 = x24*x243
    x250 = 2*x110*x128
    x251 = 2*x21
    x252 = x110**2
    x253 = 4/lL11**4
    x254 = x20**3*x253
    x255 = 6*x236
    x256 = ddq_j3*x251
    x257 = x176 + x179 + x180 + x181 + x182 + x183 + x185
    x258 = x161 + x164 + x165 + x166 + x167 + x169 + x170
    x259 = x24*x25
    x260 = 4*x174*x259
    x261 = -x130
    x262 = 4*x125
    x263 = x262*x7
    x264 = x261 + 3
    x265 = x24*x98
    x266 = x262*x9
    x267 = x26*x264
    x268 = x20*x262
    x269 = x128**2
    x270 = 4/lL12**4
    x271 = x24**3*x270
    x272 = 6*x259
    
    K_block_list = []
    K_block_list.append(x201*(2*ddq_i1*x17*x6*(x31 + 1) - ddq_j1*x102*(-x12*x140 + x12*x142 - x140*x23 - x140*x27 - x140*x48 - x140*x60 - x140*x72 - x140*x80 + x141*x36 + x142*x23 + x142*x27 + x142*x48 + x142*x60 + x142*x72 - x29*x33 + x32 + x86*(-x138*x139*x28 + 10*x138*x6 - x84)) - ddq_j2*x10*x102*(ddq_i2*x30 - ddq_i2*x79 + x101 - x23*x81 - x27*x81 - x48*x81 - x60*x81 - x7*x73 - x72*x81 + x75 - x80*x81 + x83*x87) + 2*dq_i1*x6*x7*x8 + 2*dq_j1*x6*(4*ddq_i2*x10*x17*x28*x6*x9 + 4*ddq_i3*x17*x20*x21*x28*x6 + 4*ddq_i4*x17*x24*x25*x28*x6 + 4*dq_i1*x17*x28*x32*x6 + 4*dq_i2*x17*x28*x47*x6 + 4*dq_i3*x17*x28*x59*x6 + 4*dq_i4*x17*x28*x6*x71 + 2*x17*x32*x7 - x190 - x191*x30 - x192*x84 - x200 - x7*x8) + 2*dq_j2*x6*(4*ddq_i2*x10*x143*x28*x6*x9 + 4*ddq_i3*x143*x20*x21*x28*x6 + 4*ddq_i4*x143*x24*x25*x28*x6 + 4*dq_i1*x143*x28*x32*x6 + 4*dq_i2*x143*x28*x47*x6 + 4*dq_i3*x143*x28*x59*x6 + 4*dq_i4*x143*x28*x6*x71 + 2*x143*x32*x7 - x145 - x147*x30 - x149*x84 - x158) + 2*dq_j3*x6*(4*ddq_i2*x10*x159*x28*x6*x9 + 4*ddq_i3*x159*x20*x21*x28*x6 + 4*ddq_i4*x159*x24*x25*x28*x6 + 4*dq_i1*x159*x28*x32*x6 + 4*dq_i2*x159*x28*x47*x6 + 4*dq_i3*x159*x28*x59*x6 + 4*dq_i4*x159*x28*x6*x71 + 2*x159*x32*x7 - x161 - x163*x30 - x164*x84 - x173) + 2*dq_j4*x6*(4*ddq_i2*x10*x174*x28*x6*x9 + 4*ddq_i3*x174*x20*x21*x28*x6 + 4*ddq_i4*x174*x24*x25*x28*x6 + 4*dq_i1*x174*x28*x32*x6 + 4*dq_i2*x174*x28*x47*x6 + 4*dq_i3*x174*x28*x59*x6 + 4*dq_i4*x174*x28*x6*x71 + 2*x174*x32*x7 - x176 - x178*x30 - x179*x84 - x188) + x0*x1*x2 - x102*x120*(ddq_i3*x30 - x103*x7 + x105 - x108*x78 - x109*x12 - x109*x27 - x109*x48 - x109*x60 - x109*x72 - x109*x80 + x110*x111 + x119) - x102*x137*(ddq_i4*x30 + x111*x128 - x12*x127 - x121*x7 + x123 - x126*x78 - x127*x23 - x127*x48 - x127*x60 - x127*x72 - x127*x80 + x136) - x12*x19 - x18*x36 - x19*x23 - x19*x27 - x19*x48 - x19*x60 - x19*x72 + x3*x4*x5 - x34))
    K_block_list.append(x201*(2*ddq_i2*x10*x143*(x204 + 1) + 2*ddq_j1*x10*x6*(ddq_i1*x79 - ddq_i1*x89 + x205*x7 + x208 - x209*x210 + x211*x36 + x212*x23 + x212*x27 + x212*x48 + x212*x60 + x212*x72 + x219) + 2*dq_i2*x10*x146*x9 + 2*dq_j1*x10*(4*ddq_i1*x10*x17*x6*x7*x76 + 4*ddq_i3*x10*x17*x20*x21*x76 + 4*ddq_i4*x10*x17*x24*x25*x76 + 4*dq_i1*x10*x17*x32*x76 + 4*dq_i2*x10*x17*x47*x76 + 4*dq_i3*x10*x17*x59*x76 + 4*dq_i4*x10*x17*x71*x76 + 2*x17*x47*x9 - x191*x89 - x198 - x199*x209 - x234) + 2*dq_j2*x10*(4*ddq_i1*x10*x143*x6*x7*x76 + 4*ddq_i3*x10*x143*x20*x21*x76 + 4*ddq_i4*x10*x143*x24*x25*x76 + 4*dq_i1*x10*x143*x32*x76 + 4*dq_i2*x10*x143*x47*x76 + 4*dq_i3*x10*x143*x59*x76 + 4*dq_i4*x10*x143*x71*x76 + 2*x143*x47*x9 - x146*x9 - x147*x89 - x156*x209 - x157 - x235) + 2*dq_j3*x10*(4*ddq_i1*x10*x159*x6*x7*x76 + 4*ddq_i3*x10*x159*x20*x21*x76 + 4*ddq_i4*x10*x159*x24*x25*x76 + 4*dq_i1*x10*x159*x32*x76 + 4*dq_i2*x10*x159*x47*x76 + 4*dq_i3*x10*x159*x59*x76 + 4*dq_i4*x10*x159*x71*x76 + 2*x159*x47*x9 - x161*x209 - x163*x89 - x164 - x173) + 2*dq_j4*x10*(4*ddq_i1*x10*x174*x6*x7*x76 + 4*ddq_i3*x10*x174*x20*x21*x76 + 4*ddq_i4*x10*x174*x24*x25*x76 + 4*dq_i1*x10*x174*x32*x76 + 4*dq_i2*x10*x174*x47*x76 + 4*dq_i3*x10*x174*x59*x76 + 4*dq_i4*x10*x174*x71*x76 + 2*x174*x47*x9 - x176*x209 - x178*x89 - x179 - x188) - x120*x224*(ddq_i3*x89 - x108*x211 + x119 - x148*x221 - x20*x205 + x220 - x221*x27 - x221*x48 - x221*x60 - x221*x72 - x221*x80 + x222*x223) - x137*x224*(ddq_i4*x89 - x126*x211 + x136 - x148*x226 - x205*x24 + x223*x227 + x225 - x226*x23 - x226*x48 - x226*x60 - x226*x72 - x226*x80) - x148*x203 - x152 - x203*x23 - x203*x27 - x203*x48 - x203*x60 - x203*x72 - x203*x80 - x233*(x11*(10*x10*x228 - x209 - x228*x229*x76) - x148*x230 + x148*x232 + x202*x231 - x23*x230 + x23*x232 - x230*x27 - x230*x48 - x230*x60 - x230*x72 - x230*x80 + x232*x27 + x232*x48 + x232*x60 + x232*x72 + x47 - x77*x92) + x37*x38*x45 + x40*x41*x43))
    K_block_list.append(x201*(2*ddq_i3*x159*x21*(x238 + 1) + 2*ddq_j1*x21*x6*(-ddq_i1*x113 + x107*x242 + x12*x244 - x207*x241 + x219 + x239*x7 + x240 + x243*x36 + x244*x27 + x244*x48 + x244*x60 + x244*x72) + 2*dq_i3*x162*x20*x21 + 2*dq_j1*x21*(4*ddq_i1*x106*x17*x21*x6*x7 + 4*ddq_i2*x10*x106*x17*x21*x9 + 4*ddq_i4*x106*x17*x21*x24*x25 + 4*dq_i1*x106*x17*x21*x32 + 4*dq_i2*x106*x17*x21*x47 + 4*dq_i3*x106*x17*x21*x59 + 4*dq_i4*x106*x17*x21*x71 - x113*x191 + 2*x17*x20*x59 - x198*x241 - x199 - x234) + 2*dq_j2*x21*(4*ddq_i1*x106*x143*x21*x6*x7 + 4*ddq_i2*x10*x106*x143*x21*x9 + 4*ddq_i4*x106*x143*x21*x24*x25 + 4*dq_i1*x106*x143*x21*x32 + 4*dq_i2*x106*x143*x21*x47 + 4*dq_i3*x106*x143*x21*x59 + 4*dq_i4*x106*x143*x21*x71 - x113*x147 + 2*x143*x20*x59 - x145*x241 - x149 - x158) + 2*dq_j3*x21*(4*ddq_i1*x106*x159*x21*x6*x7 + 4*ddq_i2*x10*x106*x159*x21*x9 + 4*ddq_i4*x106*x159*x21*x24*x25 + 4*dq_i1*x106*x159*x21*x32 + 4*dq_i2*x106*x159*x21*x47 + 4*dq_i3*x106*x159*x21*x59 + 4*dq_i4*x106*x159*x21*x71 - x113*x163 + 2*x159*x20*x59 - x162*x20 - x171*x241 - x172 - x258) + 2*dq_j4*x21*(4*ddq_i1*x106*x174*x21*x6*x7 + 4*ddq_i2*x10*x106*x174*x21*x9 + 4*ddq_i4*x106*x174*x21*x24*x25 + 4*dq_i1*x106*x174*x21*x32 + 4*dq_i2*x106*x174*x21*x47 + 4*dq_i3*x106*x174*x21*x59 + 4*dq_i4*x106*x174*x21*x71 - x113*x178 + 2*x174*x20*x59 - x186*x241 - x187 - x257) - x12*x237 - x137*x251*(ddq_i4*x113 - x12*x249 + x123 - x126*x243 + x129 + x131 + x132 + x133 + x134 + x135 - x148*x249 + x225 - x239*x24 + x248*x250 - x249*x48 - x249*x60 - x249*x72 - x249*x80) - x148*x237 - x168 - x21*x233*(ddq_i2*x113 + x101 - x107*x246 - x148*x247 + x222*x248 - x239*x9 + x245 - x247*x27 - x247*x48 - x247*x60 - x247*x72 - x247*x80) - x237*x27 - x237*x48 - x237*x60 - x237*x72 - x237*x80 - x256*(-x107*x95 - x12*x254 + x12*x255 - x148*x254 + x148*x255 + x22*(-x106*x252*x253 + 10*x21*x252 - x241) + x231*x236 - x254*x27 - x254*x48 - x254*x60 - x254*x72 - x254*x80 + x255*x27 + x255*x48 + x255*x60 + x255*x72 + x59) + x49*x50*x57 + x52*x53*x55))
    K_block_list.append(x201*(2*ddq_i4*x174*x25*(x261 + 1) + 2*ddq_j1*x25*x6*(-ddq_i1*x130 + ddq_i1 + x12*x263 + x125*x242 + x208 + x213 + x214 + x215 + x216 + x217 - x218*x264 + x23*x263 + x240 + x262*x36 + x263*x48 + x263*x60 + x263*x72 + x265*x7) - 2*ddq_j4*x25*(-x12*x271 + x12*x272 - x125*x98 - x148*x271 + x148*x272 - x23*x271 + x23*x272 + x231*x259 + x26*(-x124*x269*x270 + 10*x25*x269 - x264) - x271*x48 - x271*x60 - x271*x72 - x271*x80 + x272*x48 + x272*x60 + x272*x72 + x71) + 2*dq_i4*x177*x24*x25 + 2*dq_j1*x25*(4*ddq_i1*x124*x17*x25*x6*x7 + 4*ddq_i2*x10*x124*x17*x25*x9 + 4*ddq_i3*x124*x17*x20*x21*x25 + 4*dq_i1*x124*x17*x25*x32 + 4*dq_i2*x124*x17*x25*x47 + 4*dq_i3*x124*x17*x25*x59 + 4*dq_i4*x124*x17*x25*x71 - x130*x191 + 2*x17*x24*x71 - x190*x264 - x192 - x200) + 2*dq_j2*x25*(4*ddq_i1*x124*x143*x25*x6*x7 + 4*ddq_i2*x10*x124*x143*x25*x9 + 4*ddq_i3*x124*x143*x20*x21*x25 + 4*dq_i1*x124*x143*x25*x32 + 4*dq_i2*x124*x143*x25*x47 + 4*dq_i3*x124*x143*x25*x59 + 4*dq_i4*x124*x143*x25*x71 - x130*x147 + 2*x143*x24*x71 - x156 - x157*x264 - x235) + 2*dq_j3*x25*(4*ddq_i1*x124*x159*x25*x6*x7 + 4*ddq_i2*x10*x124*x159*x25*x9 + 4*ddq_i3*x124*x159*x20*x21*x25 + 4*dq_i1*x124*x159*x25*x32 + 4*dq_i2*x124*x159*x25*x47 + 4*dq_i3*x124*x159*x25*x59 + 4*dq_i4*x124*x159*x25*x71 - x130*x163 + 2*x159*x24*x71 - x171 - x172*x264 - x258) + 2*dq_j4*x25*(4*ddq_i1*x124*x174*x25*x6*x7 + 4*ddq_i2*x10*x124*x174*x25*x9 + 4*ddq_i3*x124*x174*x20*x21*x25 + 4*dq_i1*x124*x174*x25*x32 + 4*dq_i2*x124*x174*x25*x47 + 4*dq_i3*x124*x174*x25*x59 + 4*dq_i4*x124*x174*x25*x71 - x130*x178 + 2*x174*x24*x71 - x177*x24 - x186 - x187*x264 - x257) - x12*x260 - x148*x260 - x184 - x23*x260 - x233*x25*(ddq_i2*x130 + x100 - x125*x246 - x148*x266 + x227*x267 - x23*x266 + x245 - x265*x9 - x266*x48 - x266*x60 - x266*x72 - x266*x80 + x75 + x88 + x90 + x91 + x94 + x97) - x25*x256*(ddq_i3*x130 + x105 - x108*x262 + x112 + x114 + x115 + x116 + x117 + x118 - x12*x268 - x148*x268 - x20*x265 + x220 + x250*x267 - x268*x48 - x268*x60 - x268*x72 - x268*x80) - x260*x48 - x260*x60 - x260*x72 - x260*x80 + x61*x62*x69 + x64*x65*x67))
    
    return K_block_list

