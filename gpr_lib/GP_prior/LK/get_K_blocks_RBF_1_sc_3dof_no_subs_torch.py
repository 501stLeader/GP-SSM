import torch

def get_K_blocks_RBF_1_sc_3dof_no_subs(X1, X2, pos_indices, vel_indices, acc_indices, lL, sL):

    q_i1 = X1[:,pos_indices[0]:pos_indices[0]+1]
    dq_i1 = X1[:,vel_indices[0]:vel_indices[0]+1]
    ddq_i1 = X1[:,acc_indices[0]:acc_indices[0]+1]
    q_j1 = X2[:,pos_indices[0]:pos_indices[0]+1].transpose(1,0)
    dq_j1 = X2[:,vel_indices[0]:vel_indices[0]+1].transpose(1,0)
    ddq_j1 = X2[:,acc_indices[0]:acc_indices[0]+1].transpose(1,0)
    q_i2 = X1[:,pos_indices[1]:pos_indices[1]+1]
    dq_i2 = X1[:,vel_indices[1]:vel_indices[1]+1]
    ddq_i2 = X1[:,acc_indices[1]:acc_indices[1]+1]
    q_j2 = X2[:,pos_indices[1]:pos_indices[1]+1].transpose(1,0)
    dq_j2 = X2[:,vel_indices[1]:vel_indices[1]+1].transpose(1,0)
    ddq_j2 = X2[:,acc_indices[1]:acc_indices[1]+1].transpose(1,0)
    q_i3 = X1[:,pos_indices[2]:pos_indices[2]+1]
    dq_i3 = X1[:,vel_indices[2]:vel_indices[2]+1]
    ddq_i3 = X1[:,acc_indices[2]:acc_indices[2]+1]
    q_j3 = X2[:,pos_indices[2]:pos_indices[2]+1].transpose(1,0)
    dq_j3 = X2[:,vel_indices[2]:vel_indices[2]+1].transpose(1,0)
    ddq_j3 = X2[:,acc_indices[2]:acc_indices[2]+1].transpose(1,0)

    lL1 = lL[0]
    lL4 = lL[3]
    lL7 = lL[6]
    lL2 = lL[1]
    lL5 = lL[4]
    lL8 = lL[7]
    lL3 = lL[2]
    lL6 = lL[5]
    lL9 = lL[8]

    
    x0 = torch.sin(q_i1)
    x1 = torch.sin(q_j1)
    x2 = lL1**(-2.0)
    x3 = torch.cos(q_i1)
    x4 = torch.cos(q_j1)
    x5 = lL4**(-2.0)
    x6 = lL7**(-2.0)
    x7 = dq_i1 - dq_j1
    x8 = x0*x1*x2 + x3*x4*x5
    x9 = x0 - x1
    x10 = x5*x9
    x11 = x3 - x4
    x12 = x11*x2
    x13 = -x1*x12 + x10*x4
    x14 = 4*x13
    x15 = lL8**(-2.0)
    x16 = ddq_i2*x15
    x17 = dq_i2 - dq_j2
    x18 = x17*x7
    x19 = x18*x6
    x20 = x16*x19
    x21 = lL9**(-2.0)
    x22 = ddq_i3*x21
    x23 = dq_i3 - dq_j3
    x24 = x23*x7
    x25 = x24*x6
    x26 = x22*x25
    x27 = x7**2
    x28 = x27*x6
    x29 = 2*x28
    x30 = -x29
    x31 = x30 + 1
    x32 = x10*x3
    x33 = x0*x12
    x34 = x32 - x33
    x35 = 2*x34
    x36 = x13*x35
    x37 = dq_i1*x34
    x38 = x13*x37
    x39 = x6*x7
    x40 = 4*x39
    x41 = torch.sin(q_i2)
    x42 = torch.sin(q_j2)
    x43 = x41 - x42
    x44 = lL5**(-2.0)
    x45 = torch.cos(q_i2)
    x46 = x44*x45
    x47 = x43*x46
    x48 = torch.cos(q_j2)
    x49 = x45 - x48
    x50 = lL2**(-2.0)
    x51 = x41*x50
    x52 = x49*x51
    x53 = x47 - x52
    x54 = x13*x53
    x55 = x54*x7
    x56 = 4*x6
    x57 = dq_i2*x55*x56
    x58 = torch.sin(q_i3)
    x59 = torch.sin(q_j3)
    x60 = x58 - x59
    x61 = lL6**(-2.0)
    x62 = torch.cos(q_i3)
    x63 = x61*x62
    x64 = x60*x63
    x65 = torch.cos(q_j3)
    x66 = x62 - x65
    x67 = lL3**(-2.0)
    x68 = x58*x67
    x69 = x66*x68
    x70 = x64 - x69
    x71 = x13*x70
    x72 = x7*x71
    x73 = dq_i3*x56*x72
    x74 = x17*x23
    x75 = 2*x74
    x76 = x17**2
    x77 = x15*x76
    x78 = 4*x28
    x79 = x77*x78
    x80 = x37*x78
    x81 = dq_i2*x53
    x82 = x78*x81
    x83 = dq_i3*x70
    x84 = x78*x83
    x85 = -x17
    x86 = 2*x85
    x87 = x30 + 3
    x88 = -x7
    x89 = ddq_i1*x6
    x90 = x87*x88*x89
    x91 = x74*x78
    x92 = 2*x77
    x93 = ddq_i2*x92
    x94 = dq_i1*x35
    x95 = x17*x94
    x96 = 2*x53
    x97 = dq_i2*x96
    x98 = x17*x97
    x99 = 2*x70
    x100 = dq_i3*x99
    x101 = x100*x17
    x102 = -ddq_i2 + x101 + x93 + x95 + x98
    x103 = ddq_i2*x29 - ddq_i2*x79 + x102 - x17*x80 - x17*x82 - x17*x84 - x18*x35 + x22*x75 - x22*x91 + x86*x90
    x104 = ddq_j2*x15
    x105 = 2*x6
    x106 = x104*x105
    x107 = x23**2
    x108 = x107*x21
    x109 = x108*x78
    x110 = -x23
    x111 = 2*x108
    x112 = ddq_i3*x111
    x113 = x23*x94
    x114 = x23*x97
    x115 = x100*x23
    x116 = -ddq_i3 + x112 + x113 + x114 + x115
    x117 = -ddq_i3*x109 + ddq_i3*x29 + 2*x110*x90 + x116 + x16*x75 - x16*x91 - x23*x80 - x23*x82 - x23*x84 - x24*x35
    x118 = ddq_j3*x21
    x119 = x105*x118
    x120 = x88**2
    x121 = 4/lL7**4
    x122 = x121*x7**3
    x123 = 6*x39
    x124 = x16*x17
    x125 = x22*x23
    x126 = 6*x16
    x127 = x126*x19
    x128 = 6*x22
    x129 = x128*x25
    x130 = ddq_j1*x6
    x131 = -x42*x49*x50 + x43*x44*x48
    x132 = 2*x23
    x133 = x132*x22
    x134 = x131*x133
    x135 = x42*x51 + x46*x48
    x136 = dq_i2*x135
    x137 = x7*x89
    x138 = 2*x137
    x139 = x131*x138
    x140 = -dq_i2*x135
    x141 = x131*x34
    x142 = 2*dq_i1*x141
    x143 = x131*x96
    x144 = dq_i2*x143
    x145 = x131*x70
    x146 = 2*dq_i3
    x147 = x145*x146
    x148 = 2*x17
    x149 = x148*x16
    x150 = x131*x149
    x151 = x140 + x142 + x144 + x147 + x150
    x152 = -x59*x66*x67 + x60*x61*x65
    x153 = x149*x152
    x154 = x59*x68 + x63*x65
    x155 = dq_i3*x154
    x156 = x138*x152
    x157 = -dq_i3*x154
    x158 = x152*x34
    x159 = 2*dq_i1*x158
    x160 = x152*x53
    x161 = 2*dq_i2
    x162 = x160*x161
    x163 = x152*x99
    x164 = dq_i3*x163
    x165 = x133*x152
    x166 = x157 + x159 + x162 + x164 + x165
    x167 = -dq_i1*x8
    x168 = dq_i1*x8
    x169 = x13*x149
    x170 = x13*x133
    x171 = 2*x13*x137
    x172 = dq_i1*x36
    x173 = x161*x54
    x174 = x146*x71
    x175 = sL*torch.exp(-x108 - x11**2*x2 - x28 - x43**2*x44 - x49**2*x50 - x5*x9**2 - x60**2*x61 - x66**2*x67 - x77)
    x176 = 2*x175
    x177 = x31*x89
    x178 = x131*x177
    x179 = x105*x18
    x180 = x16*x179
    x181 = x105*x24
    x182 = x181*x22
    x183 = x105*x7
    x184 = dq_i1*x183
    x185 = x145*x7
    x186 = x146*x6
    x187 = x185*x186
    x188 = ddq_i2*x24
    x189 = ddq_i3*x18
    x190 = x39*x94
    x191 = x39*x97
    x192 = x100*x39
    x193 = x112*x19 - x177*x74 - x188*x6 - x189*x6 + x190*x74 + x191*x74 + x192*x74 + x25*x93 + x34*x74
    x194 = 2*x15
    x195 = x118*x194
    x196 = -x92
    x197 = x196 + x31 + x79
    x198 = 4/lL8**4
    x199 = x17**3*x198
    x200 = ddq_i2*x199
    x201 = 4*x77
    x202 = x201*x37
    x203 = x201*x81
    x204 = x201*x83
    x205 = -x190 - x191 - x192 - x32 + x33
    x206 = ddq_i2*x131
    x207 = x131*x39
    x208 = x22*x74
    x209 = x183*x208
    x210 = x141*x17
    x211 = x152*x39
    x212 = x152*x177
    x213 = x158*x17
    x214 = x160*x7
    x215 = x161*x6
    x216 = x214*x215
    x217 = x18*x70
    x218 = x152*x217
    x219 = ddq_i2*x13
    x220 = x13*x40
    x221 = x13*x177
    x222 = 4*x38
    x223 = 4*x175
    x224 = 2*x21
    x225 = x104*x224
    x226 = -x111
    x227 = x109 + x226 + x31
    x228 = 4/lL9**4
    x229 = x228*x23**3
    x230 = ddq_i3*x229
    x231 = x108*x40
    x232 = 4*x108
    x233 = ddq_i3*x131
    x234 = x16*x74
    x235 = x141*x23
    x236 = x24*x53
    x237 = x131*x236
    x238 = x152*x16
    x239 = x158*x23
    x240 = ddq_i3*x13
    x241 = 4*dq_i3
    x242 = x15*x17
    x243 = x196 + 1
    x244 = x16*x243
    x245 = x13*x244
    x246 = x18*x194
    x247 = x246*x89
    x248 = x194*x74
    x249 = x22*x248
    x250 = x13*x249
    x251 = x17*x71
    x252 = x146*x15
    x253 = ddq_i1*x74
    x254 = ddq_i1*x29
    x255 = x15*x74
    x256 = x15*x18
    x257 = x7*x94
    x258 = x7*x97
    x259 = x100*x7
    x260 = x112*x256 - x15*x189 - x15*x253 + x236 - x24*x244 + x254*x255 + x255*x257 + x255*x258 + x255*x259
    x261 = 2*x24
    x262 = x22*x261
    x263 = x196 + 3
    x264 = 2*x18
    x265 = x16*x264
    x266 = x201*x7
    x267 = x201*x24
    x268 = ddq_i1 - x254 - x257 - x258 - x259
    x269 = ddq_i1*x79 - ddq_i1*x92 + x18*x96 + x22*x267 - x262 - x263*x265 + x266*x37 + x266*x81 + x266*x83 + x268
    x270 = 6*x89
    x271 = x256*x270
    x272 = ddq_i1*x122
    x273 = x22*x255
    x274 = -x101*x15 - x15*x95 - x15*x98 - x47 + x52
    x275 = ddq_i1*x13
    x276 = x242*x275
    x277 = x161*x242
    x278 = dq_j1*x105
    x279 = x152*x242
    x280 = ddq_i1*x279
    x281 = x152*x249
    x282 = x152*x244
    x283 = dq_i1*x213
    x284 = x194*x283
    x285 = dq_j3*x6
    x286 = ddq_i1*x131
    x287 = x17*x194
    x288 = 4*x131
    x289 = x273*x288
    x290 = x131*x244
    x291 = 4*x15
    x292 = dq_i1*x210
    x293 = x291*x292
    x294 = 4*x81
    x295 = x131*x294
    x296 = dq_j2*x6
    x297 = x256*x89
    x298 = x145*x17
    x299 = x108*x201
    x300 = x110*x86
    x301 = -ddq_i3*x299 + ddq_i3*x92 + x116 + x16*x263*x300 - x202*x23 - x203*x23 - x204*x23 + x261*x89 - x267*x89 - x74*x96
    x302 = x85**2
    x303 = 6*x242
    x304 = x128*x255
    x305 = x167 + x171 + x172 + x173 + x174
    x306 = x226 + x243 + x299
    x307 = x232*x242
    x308 = x137*x248
    x309 = x23*x54
    x310 = x160*x23
    x311 = x21*x23
    x312 = x226 + 1
    x313 = x22*x312
    x314 = x13*x313
    x315 = x224*x24
    x316 = x315*x89
    x317 = x224*x74
    x318 = x16*x317
    x319 = x13*x318
    x320 = x161*x21
    x321 = x21*x74
    x322 = x21*x24
    x323 = -x18*x313 - x188*x21 - x21*x253 + x217 + x254*x321 + x257*x321 + x258*x321 + x259*x321 + x322*x93
    x324 = x226 + 3
    x325 = x108*x7
    x326 = 4*x325
    x327 = x18*x232
    x328 = ddq_i1*x109 - ddq_i1*x111 + x16*x327 + x24*x99 - x262*x324 - x265 + x268 + x294*x325 + x326*x37 + x326*x83
    x329 = x270*x322
    x330 = -x113*x21 - x114*x21 - x115*x21 - x64 + x69
    x331 = x275*x311
    x332 = x131*x311
    x333 = x131*x318
    x334 = x131*x313
    x335 = dq_i1*x224*x235
    x336 = x224*x23
    x337 = ddq_i1*x152
    x338 = 4*x321
    x339 = x238*x338
    x340 = x152*x313
    x341 = 4*x21
    x342 = dq_i1*x239*x341
    x343 = 4*x311
    x344 = x152*x83
    x345 = 4*x344
    x346 = x108*x17
    x347 = 4*x346
    x348 = ddq_i2*x111 - ddq_i2*x299 + x102 + x22*x300*x324 + x264*x89 - x294*x346 - x327*x89 - x347*x37 - x347*x83 - x74*x99
    x349 = x126*x321
    x350 = x322*x89
    x351 = x137*x317
    x352 = ddq_i2*x152
    x353 = x110**2
    x354 = 6*x311
    
    K_block_list = []
    K_block_list.append(x176*(2*ddq_i1*x13*x31*x6 + 2*dq_i1*x6*x7*x8 + 2*dq_j1*x6*(4*ddq_i2*x13*x15*x17*x27*x6 + 4*ddq_i3*x13*x21*x23*x27*x6 + 4*dq_i1*x13*x27*x34*x6 + 4*dq_i2*x13*x27*x53*x6 + 4*dq_i3*x13*x27*x6*x70 + 2*x13*x34*x7 - x167 - x168*x29 - x169 - x170 - x171*x87 - x172 - x173 - x174 - x7*x8) + 2*dq_j2*x6*(4*ddq_i2*x131*x15*x17*x27*x6 + 4*ddq_i3*x131*x21*x23*x27*x6 + 4*dq_i1*x131*x27*x34*x6 + 4*dq_i2*x131*x27*x53*x6 + 4*dq_i3*x131*x27*x6*x70 + 2*x131*x34*x7 - x134 - x136*x29 - x139*x87 - x151) + 2*dq_j3*x6*(4*ddq_i2*x15*x152*x17*x27*x6 + 4*ddq_i3*x152*x21*x23*x27*x6 + 4*dq_i1*x152*x27*x34*x6 + 4*dq_i2*x152*x27*x53*x6 + 4*dq_i3*x152*x27*x6*x70 + 2*x152*x34*x7 - x153 - x155*x29 - x156*x87 - x166) + x0*x1*x2 - x103*x106 - x117*x119 - 2*x130*(-x122*x124 - x122*x125 - x122*x37 - x122*x81 - x122*x83 + x123*x37 + x123*x81 + x123*x83 + x127 + x129 - x28*x35 + x34 + x89*(-x120*x121*x27 + 10*x120*x6 - x87)) - x14*x20 - x14*x26 + x3*x4*x5 - x36 - x38*x40 - x57 - x73))
    K_block_list.append(x223*(dq_j1*x15*(-x148*x221 - x168*x179 + x17*x36 + x17*x57 + x17*x73 - x17*x8 - x183*x219 + x19*x222 + x201*x219*x39 + x208*x220) + dq_j2*x194*(x131*x209 - x136*x19 + x144*x19 - x17*x178 + x17*x187 + x184*x210 - x206*x39 + x207*x93 + x210) + 2*dq_j3*x15*(-ddq_i2*x211 + x152*x209 - x155*x19 - x17*x212 + x17*x216 + x184*x213 + x186*x218 + x211*x93 + x213) - x103*x130*x15 + x104*(-x127 - x182 + x197*x89 + x200*x39 + x201*x26 + x202*x39 + x203*x39 + x204*x39 + x205 + x35*x77) - x131*x180 - x131*x182 + x136*x39 - x141*x184 - x141 - x144*x39 + x178 - x187 + x193*x195))
    K_block_list.append(x223*(dq_j1*x21*(-x132*x221 - x168*x181 - x183*x240 + x220*x234 + x222*x25 + x23*x36 + x23*x57 - x23*x8 + x231*x240 + x241*x25*x71) + 2*dq_j2*x21*(x112*x207 + x131*x183*x234 - x136*x25 + x147*x25 - x178*x23 + x184*x235 + x215*x237 - x233*x39 + x235) + dq_j3*x224*(-ddq_i3*x211 + x112*x211 - x155*x25 + x164*x25 + x183*x238*x74 + x184*x239 - x212*x23 + x216*x23 + x239) - x117*x130*x21 + x118*(x108*x35 - x129 - x180 + x20*x232 + x205 + x227*x89 + x230*x39 + x231*x37 + x231*x81 + x231*x83) - x152*x180 - x152*x182 + x155*x39 - x158*x184 - x158 - x164*x39 + x193*x225 + x212 - x216))
    K_block_list.append(x223*(x104*x269*x6 + x119*x260 - x13*x247 + x130*(x16*x197 + x242*x272 + x242*x80 + x242*x82 + x242*x84 - x249 - x271 + x273*x78 + x274 + x29*x53) + x168*x242 - x172*x242 - x173*x242 + x245 - x250 - x251*x252 + x278*(x146*x242*x72 - x168*x256 + x172*x256 - x245*x7 + x250*x7 + x276*x29 - x276 + x277*x55 + x55) + 2*x285*(-x155*x256 + x214*x277 + x214 + x218*x252 + x280*x29 - x280 + x281*x7 - x282*x7 + x284*x7) + x296*(-x135*x7 - x136*x246 + x143*x7 + x185*x241*x242 + x242*x286*x78 + x256*x295 - x286*x287 + x289*x7 - 2*x290*x7 + x293*x7) - x54))
    K_block_list.append(x176*(2*ddq_i2*x131*x15*x243 + 2*ddq_j1*x15*x269*x6 + 2*dq_i2*x135*x15*x17 - dq_i3*x291*x298 + 2*dq_j1*x15*(4*ddq_i1*x13*x15*x6*x7*x76 + 4*ddq_i3*x13*x15*x21*x23*x76 + 4*dq_i1*x13*x15*x34*x76 + 4*dq_i2*x13*x15*x53*x76 + 4*dq_i3*x13*x15*x70*x76 + 2*x13*x17*x53 - x168*x92 - x169*x263 - x170 - x305) + 2*dq_j2*x15*(4*ddq_i1*x131*x15*x6*x7*x76 + 4*ddq_i3*x131*x15*x21*x23*x76 + 4*dq_i1*x131*x15*x34*x76 + 4*dq_i2*x131*x15*x53*x76 + 4*dq_i3*x131*x15*x70*x76 + 2*x131*x17*x53 - x134 - x135*x17 - x136*x92 - x139 - x140 - x142 - x144 - x147 - x150*x263) + 2*dq_j3*x15*(4*ddq_i1*x15*x152*x6*x7*x76 + 4*ddq_i3*x15*x152*x21*x23*x76 + 4*dq_i1*x15*x152*x34*x76 + 4*dq_i2*x15*x152*x53*x76 + 4*dq_i3*x15*x152*x70*x76 + 2*x152*x17*x53 - x153*x263 - x155*x92 - x156 - x166) - 2*x104*(-x125*x199 - x137*x199 + x16*(10*x15*x302 - x198*x302*x76 - x263) - x199*x37 - x199*x81 - x199*x83 + x271 + x303*x37 + x303*x81 + x303*x83 + x304 - x53*x92 + x53) - x143 - x195*x301 - x242*x295 - x288*x297 - x289 - x293 + x41*x42*x50 + x44*x45*x48))
    K_block_list.append(x223*(ddq_i2*x15*x152*x243 + 2*ddq_j1*x21*x260*x6 + ddq_j3*x21*(x108*x242*x294 + x111*x53 + x16*x306 + x230*x242 + x232*x297 - x247 + x274 - x304 + x307*x37 + x307*x83) + dq_i3*x15*x154*x17 + 2*dq_j1*x21*(x112*x13*x242 + x13*x308 - x168*x255 + x172*x255 + x173*x255 + x174*x255 - x23*x245 - x240*x242 + x309) + dq_j2*x21*(-x132*x290 - x135*x23 - x136*x248 + x137*x255*x288 + x143*x23 + x145*x241*x255 + x23*x293 - x233*x287 + x233*x307 + x255*x295) + 2*dq_j3*x21*(-ddq_i3*x279 + x112*x279 + x152*x308 - x155*x255 + x162*x255 + x164*x255 - x23*x282 + x23*x284 + x310) - x104*x21*x301 - x152*x247 - x160 - x162*x242 - x164*x242 - x281 - x284))
    K_block_list.append(x223*(x106*x323 + x118*x328*x6 - x13*x316 + x130*(x16*x321*x78 + x22*x227 + x272*x311 + x29*x70 + x311*x80 + x311*x82 + x311*x84 - x318 - x329 + x330) + x168*x311 - x172*x311 - x174*x311 + x278*(x161*x311*x55 - x168*x322 + x172*x322 + x174*x322 + x29*x331 - x314*x7 + x319*x7 - x331 + x72) + x285*(dq_i2*x214*x343 - x154*x7 - x155*x315 + x163*x7 + x311*x337*x78 + x322*x345 - x336*x337 + x339*x7 - 2*x340*x7 + x342*x7) + 2*x296*(-x136*x322 + x147*x322 + x185 + x237*x320 + x254*x332 - x286*x311 + x333*x7 - x334*x7 + x335*x7) - x309*x320 + x314 - x319 - x71))
    K_block_list.append(x223*(ddq_i3*x131*x21*x312 + 2*ddq_j1*x15*x323*x6 + ddq_j2*x15*(x200*x311 + x201*x350 + x202*x311 + x203*x311 + x204*x311 + x22*x306 - x316 + x330 - x349 + x70*x92) + dq_i2*x135*x21*x23 + 2*dq_j1*x15*(x13*x311*x93 + x13*x351 - x168*x321 - x17*x314 + x172*x321 + x173*x321 + x174*x321 - x219*x311 + x251) + 2*dq_j2*x15*(x131*x351 - x136*x321 + x144*x321 + x147*x321 - x17*x334 - x206*x311 + x292*x336 + x298 + x332*x93) + dq_j3*x15*(dq_i2*x160*x338 + x137*x152*x338 - x148*x340 - x154*x17 - x155*x317 + x163*x17 + x201*x311*x352 + x283*x343 + x321*x345 - x336*x352) - x118*x15*x348 - x131*x316 - x144*x311 - x145 - x147*x311 - x333 - x335))
    K_block_list.append(x176*(2*ddq_i3*x152*x21*x312 + 2*ddq_j1*x21*x328*x6 - dq_i2*x310*x341 + 2*dq_i3*x154*x21*x23 + 2*dq_j1*x21*(4*ddq_i1*x107*x13*x21*x6*x7 + 4*ddq_i2*x107*x13*x15*x17*x21 + 4*dq_i1*x107*x13*x21*x34 + 4*dq_i2*x107*x13*x21*x53 + 4*dq_i3*x107*x13*x21*x70 - x111*x168 + 2*x13*x23*x70 - x169 - x170*x324 - x305) + 2*dq_j2*x21*(4*ddq_i1*x107*x131*x21*x6*x7 + 4*ddq_i2*x107*x131*x15*x17*x21 + 4*dq_i1*x107*x131*x21*x34 + 4*dq_i2*x107*x131*x21*x53 + 4*dq_i3*x107*x131*x21*x70 - x111*x136 + 2*x131*x23*x70 - x134*x324 - x139 - x151) + 2*dq_j3*x21*(4*ddq_i1*x107*x152*x21*x6*x7 + 4*ddq_i2*x107*x15*x152*x17*x21 + 4*dq_i1*x107*x152*x21*x34 + 4*dq_i2*x107*x152*x21*x53 + 4*dq_i3*x107*x152*x21*x70 - x111*x155 + 2*x152*x23*x70 - x153 - x154*x23 - x156 - x157 - x159 - x162 - x164 - x165*x324) - 2*x118*(-x111*x70 - x124*x229 - x137*x229 + x22*(-x107*x228*x353 + 10*x21*x353 - x324) - x229*x37 - x229*x81 - x229*x83 + x329 + x349 + x354*x37 + x354*x81 + x354*x83 + x70) - 4*x152*x350 - x163 - x225*x348 - x339 - x342 - x343*x344 + x58*x59*x67 + x61*x62*x65))
    
    return K_block_list

