import torch

def get_K_blocks_GIP_sum_InversePendulum_no_subs(X1, X2, pos_indices, vel_indices, acc_indices, sigma_kin_vel_list, sigma_kin_pos_list, sigma_pot_list):

    q_i1 = X1[:,pos_indices[0]:pos_indices[0]+1]
    dq_i1 = X1[:,vel_indices[0]:vel_indices[0]+1]
    ddq_i1 = X1[:,acc_indices[0]:acc_indices[0]+1]
    q_j1 = X2[:,pos_indices[0]:pos_indices[0]+1].transpose(1,0)
    dq_j1 = X2[:,vel_indices[0]:vel_indices[0]+1].transpose(1,0)
    ddq_j1 = X2[:,acc_indices[0]:acc_indices[0]+1].transpose(1,0)
    q_i2 = X1[:,pos_indices[1]:pos_indices[1]+1]
    dq_i2 = X1[:,vel_indices[1]:vel_indices[1]+1]
    ddq_i2 = X1[:,acc_indices[1]:acc_indices[1]+1]
    q_j2 = X2[:,pos_indices[1]:pos_indices[1]+1].transpose(1,0)
    dq_j2 = X2[:,vel_indices[1]:vel_indices[1]+1].transpose(1,0)
    ddq_j2 = X2[:,acc_indices[1]:acc_indices[1]+1].transpose(1,0)

    sigma_kin_v_1_1 = sigma_kin_vel_list[0][0]
    sigma_kin_p_1_1_s = sigma_kin_pos_list[0][0]
    sigma_kin_p_1_1_c = sigma_kin_pos_list[0][1]
    sigma_kin_p_1_1_off = sigma_kin_pos_list[0][2]
    sigma_pot_1_s = sigma_pot_list[0][0]
    sigma_pot_1_c = sigma_pot_list[0][1]
    sigma_pot_1_off = sigma_pot_list[0][2]
    sigma_kin_v_2_1 = sigma_kin_vel_list[1][0]
    sigma_kin_p_2_1_s = sigma_kin_pos_list[1][0]
    sigma_kin_p_2_1_c = sigma_kin_pos_list[1][1]
    sigma_kin_p_2_1_off = sigma_kin_pos_list[1][2]
    sigma_kin_v_2_2 = sigma_kin_vel_list[1][1]
    sigma_kin_p_2_2_s = sigma_kin_pos_list[2][0]
    sigma_kin_p_2_2_c = sigma_kin_pos_list[2][1]
    sigma_kin_p_2_2_off = sigma_kin_pos_list[2][2]
    sigma_pot_2_s = sigma_pot_list[1][0]
    sigma_pot_2_c = sigma_pot_list[1][1]
    sigma_pot_2_off = sigma_pot_list[1][2]

    
    x0 = torch.sin(q_j1)
    x1 = torch.sin(q_i1)
    x2 = x0*x1
    x3 = torch.cos(q_i1)
    x4 = torch.cos(q_j1)
    x5 = x3*x4
    x6 = torch.cos(q_i2)
    x7 = torch.cos(q_j2)
    x8 = x6*x7
    x9 = torch.sin(q_i2)
    x10 = torch.sin(q_j2)
    x11 = x10*x9
    x12 = sigma_kin_v_1_1**2
    x13 = sigma_kin_p_1_1_c*x5 + sigma_kin_p_1_1_off + sigma_kin_p_1_1_s*x2
    x14 = x12*x13
    x15 = x14*(sigma_kin_p_1_1_c*x2 + sigma_kin_p_1_1_s*x5)
    x16 = dq_j1**2
    x17 = dq_i1**2
    x18 = 2*x17
    x19 = x16*x18
    x20 = x0*x3
    x21 = x1*x4
    x22 = sigma_kin_p_1_1_c*x20 - sigma_kin_p_1_1_s*x21
    x23 = sigma_kin_p_1_1_c*x21 - sigma_kin_p_1_1_s*x20
    x24 = x12*x22*x23
    x25 = 4*dq_j1
    x26 = sigma_kin_p_2_1_c*x5 + sigma_kin_p_2_1_off + sigma_kin_p_2_1_s*x2
    x27 = sigma_kin_p_2_1_c*x20 - sigma_kin_p_2_1_s*x21
    x28 = x26*x27
    x29 = dq_j2*sigma_kin_v_2_2
    x30 = sigma_kin_p_2_2_c*x7
    x31 = sigma_kin_p_2_2_s*x10
    x32 = sigma_kin_p_2_2_off + x30*x6 + x31*x9
    x33 = x32**2
    x34 = sigma_kin_v_2_1*x33
    x35 = x29*x34
    x36 = ddq_i2*x28*x35
    x37 = dq_i1*dq_j1
    x38 = sigma_kin_v_2_1*x37
    x39 = dq_i2*x29
    x40 = x38 + x39
    x41 = x40**2
    x42 = 2*x41
    x43 = sigma_kin_p_2_1_c*x2 + sigma_kin_p_2_1_s*x5
    x44 = x26*x43
    x45 = x33*x44
    x46 = sigma_kin_p_2_1_c*x21 - sigma_kin_p_2_1_s*x20
    x47 = x27*x46
    x48 = x33*x47
    x49 = dq_j1*sigma_kin_v_2_1
    x50 = dq_i2*x40
    x51 = x26*x50
    x52 = x30*x9 - x31*x6
    x53 = x27*x52
    x54 = x32*x53
    x55 = x51*x54
    x56 = ddq_j2*x32
    x57 = ddq_i2*x32
    x58 = dq_i2**2
    x59 = x52*x58
    x60 = 2*x59
    x61 = x26**2
    x62 = 2*x61
    x63 = sigma_kin_v_2_1*sigma_kin_v_2_2*x62*(x57 - x60)
    x64 = sigma_kin_v_2_1**2
    x65 = x33*x64
    x66 = x26*x65
    x67 = ddq_i1*(x14*x22 + x27*x66)
    x68 = 4*x16
    x69 = x24*x37
    x70 = x15*x37
    x71 = x34*x40
    x72 = x47*x71
    x73 = x44*x71
    x74 = x72 + x73
    x75 = x14*x23
    x76 = x46*x66
    x77 = dq_i2*x32
    x78 = x64*x77
    x79 = 4*ddq_j1
    x80 = sigma_kin_p_2_2_c*x11 + sigma_kin_p_2_2_s*x8
    x81 = x32*x80
    x82 = x26*x81
    x83 = dq_i2*x38
    x84 = 2*dq_j1
    x85 = ddq_i1*x26
    x86 = x10*x6
    x87 = x7*x9
    x88 = sigma_kin_p_2_2_c*x86 - sigma_kin_p_2_2_s*x87
    x89 = x32*x88
    x90 = x85*x89
    x91 = x26*x57
    x92 = x88*x91
    x93 = x29*x92
    x94 = x52*x88
    x95 = x26*x94
    x96 = dq_i1*x40
    x97 = x32*x96
    x98 = 2*x46
    x99 = x88*x98
    x100 = x97*x99
    x101 = 2*x38
    x102 = dq_i1*x98
    x103 = x102*x89
    x104 = 4*x26
    x105 = dq_j2*sigma_kin_v_2_1*x104
    x106 = dq_j1*x17
    x107 = 2*x26
    x108 = x107*x53
    x109 = x57*x88
    x110 = sigma_kin_v_2_1*x25*x61
    x111 = x61*x64
    x112 = sigma_kin_v_2_2**2
    x113 = x104*x112
    x114 = x113*x33
    x115 = x110*x50
    x116 = x104*x41
    x117 = x46*x89
    x118 = 8*x26
    x119 = x58*x82
    x120 = x26*x59
    x121 = x120*x88
    x122 = x46*x88
    x123 = x32*x50
    x124 = x104*x29
    x125 = x27*x91
    x126 = x25*x32
    x127 = sigma_kin_v_2_2*x126
    x128 = x27*x85
    x129 = dq_j2**2
    x130 = 4*x29*x96
    x131 = x39*x40
    x132 = sigma_kin_v_2_2*x107*x34*(-x18*x46 + x85)
    x133 = x29*x32
    x134 = x133*x17
    x135 = dq_i1*x39
    x136 = sigma_kin_v_2_1*x126
    x137 = 4*x61
    x138 = x42*x61
    x139 = x131*x137
    x140 = x135*x32
    
    K_block_list = []
    K_block_list.append(x105*(-sigma_kin_v_2_1*x84*x90 - x100 + x103*(x101 + x39) + x51*x81 + x51*x94 + x82*x83 + x83*x95 - x93) + x15*x19 + x19*x24 + x25*x36 - x25*(dq_i1*x72 + dq_i1*x73 - dq_i1*(x37*x43*x66 + x37*x47*x65 + 2*x69 + 2*x70 + x74) - 2*sigma_kin_v_2_1*x55 + x106*x15 + x106*x24 - x108*x37*x78 + x36 + x67*x84) - 4*x37*(x69 + x70 + x74) + x42*x45 + x42*x48 - 8*x49*x55 + x56*x63 + x67*x68 + x79*(ddq_i1*(x12*x13**2 + x61*x65) - dq_i1*x52*x62*x78 + x17*x75 + x17*x76 - x18*(x75 + x76)) + 1.0*(sigma_pot_1_c*x2 + sigma_pot_1_s*x5)*(sigma_pot_2_c*x8 + sigma_pot_2_off + sigma_pot_2_s*x11))
    K_block_list.append(ddq_i1*x111*x68*x89 + ddq_j1*x32*x63 + ddq_j2*x114*x46*x58 + x109*x110*x29 - x115*x81 - x115*x94 + x116*x117 - x117*x118*x38*x40 + x124*(x101*x122*x77 + x119*x49 + x121*x49 - x123*x99 - x49*x92) + x127*(dq_i1*dq_i2*dq_j1*sigma_kin_v_2_1*x26*x32*x43 + dq_i1*dq_i2*dq_j1*sigma_kin_v_2_1*x27*x32*x46 + 2*dq_j1*sigma_kin_v_2_1*x26*x27*x52*x58 - x123*x44 - x123*x47 - x125*x49) + 1.0*(sigma_pot_1_c*x21 - sigma_pot_1_s*x20)*(sigma_pot_2_c*x86 - sigma_pot_2_s*x87))
    K_block_list.append(ddq_i2*x114*x129*x27 + ddq_j2*x132 + x105*(dq_i1*dq_i2*dq_j2*sigma_kin_v_2_2*x26*x32*x80 + dq_i1*dq_i2*dq_j2*sigma_kin_v_2_2*x26*x52*x88 + 2*dq_j2*sigma_kin_v_2_2*x17*x32*x46*x88 - x29*x90 - x82*x96 - x95*x96) + x111*x17*x32*x52*x79 + x116*x54 - x118*x131*x54 + x128*x25*x35 - x130*x45 - x130*x48 + x136*(x108*x135 - x108*x96 - x128*x133 + x134*x44 + x134*x47) + 1.0*(sigma_pot_1_c*x20 - sigma_pot_1_s*x21)*(sigma_pot_2_c*x87 - sigma_pot_2_s*x86))
    K_block_list.append(ddq_i1*x136*x29*x61*x88 + ddq_j1*x132 + x109*x112*x129*x137 - x113*x56*(x102*x77 + x120 - x91) - x118*x122*x29*x97 + x124*(x100 + x103*x39 + x119*x29 + x121*x29 - x49*x90 - 2*x93) + x127*(-2*x125*x29 - x128*x32*x49 + x140*x44 + x140*x47 + x28*x29*x60 + x44*x97 + x47*x97) + x138*x81 + x138*x94 - x139*x81 - x139*x94 + 1.0*(sigma_pot_2_c*x11 + sigma_pot_2_s*x8)*(sigma_pot_1_c*x5 + sigma_pot_1_off + sigma_pot_1_s*x2))
    
    return K_block_list

