import torch

def get_K_blocks_GIP_sum_PANDA_4dof_no_subs(X1, X2, pos_indices, vel_indices, acc_indices, sigma_kin_vel_list, sigma_kin_pos_list, sigma_pot_list):

    q_i1 = X1[:,pos_indices[0]:pos_indices[0]+1]
    dq_i1 = X1[:,vel_indices[0]:vel_indices[0]+1]
    ddq_i1 = X1[:,acc_indices[0]:acc_indices[0]+1]
    q_j1 = X2[:,pos_indices[0]:pos_indices[0]+1].transpose(1,0)
    dq_j1 = X2[:,vel_indices[0]:vel_indices[0]+1].transpose(1,0)
    ddq_j1 = X2[:,acc_indices[0]:acc_indices[0]+1].transpose(1,0)
    q_i2 = X1[:,pos_indices[1]:pos_indices[1]+1]
    dq_i2 = X1[:,vel_indices[1]:vel_indices[1]+1]
    ddq_i2 = X1[:,acc_indices[1]:acc_indices[1]+1]
    q_j2 = X2[:,pos_indices[1]:pos_indices[1]+1].transpose(1,0)
    dq_j2 = X2[:,vel_indices[1]:vel_indices[1]+1].transpose(1,0)
    ddq_j2 = X2[:,acc_indices[1]:acc_indices[1]+1].transpose(1,0)
    q_i3 = X1[:,pos_indices[2]:pos_indices[2]+1]
    dq_i3 = X1[:,vel_indices[2]:vel_indices[2]+1]
    ddq_i3 = X1[:,acc_indices[2]:acc_indices[2]+1]
    q_j3 = X2[:,pos_indices[2]:pos_indices[2]+1].transpose(1,0)
    dq_j3 = X2[:,vel_indices[2]:vel_indices[2]+1].transpose(1,0)
    ddq_j3 = X2[:,acc_indices[2]:acc_indices[2]+1].transpose(1,0)
    q_i4 = X1[:,pos_indices[3]:pos_indices[3]+1]
    dq_i4 = X1[:,vel_indices[3]:vel_indices[3]+1]
    ddq_i4 = X1[:,acc_indices[3]:acc_indices[3]+1]
    q_j4 = X2[:,pos_indices[3]:pos_indices[3]+1].transpose(1,0)
    dq_j4 = X2[:,vel_indices[3]:vel_indices[3]+1].transpose(1,0)
    ddq_j4 = X2[:,acc_indices[3]:acc_indices[3]+1].transpose(1,0)

    sigma_kin_v_1_1 = sigma_kin_vel_list[0][0]
    sigma_kin_p_1_1_s = sigma_kin_pos_list[0][0]
    sigma_kin_p_1_1_c = sigma_kin_pos_list[0][1]
    sigma_kin_p_1_1_off = sigma_kin_pos_list[0][2]
    sigma_pot_1_s = sigma_pot_list[0][0]
    sigma_pot_1_c = sigma_pot_list[0][1]
    sigma_pot_1_off = sigma_pot_list[0][2]
    sigma_kin_v_2_1 = sigma_kin_vel_list[1][0]
    sigma_kin_p_2_1_s = sigma_kin_pos_list[1][0]
    sigma_kin_p_2_1_c = sigma_kin_pos_list[1][1]
    sigma_kin_p_2_1_off = sigma_kin_pos_list[1][2]
    sigma_kin_v_2_2 = sigma_kin_vel_list[1][1]
    sigma_kin_p_2_2_s = sigma_kin_pos_list[2][0]
    sigma_kin_p_2_2_c = sigma_kin_pos_list[2][1]
    sigma_kin_p_2_2_off = sigma_kin_pos_list[2][2]
    sigma_pot_2_s = sigma_pot_list[1][0]
    sigma_pot_2_c = sigma_pot_list[1][1]
    sigma_pot_2_off = sigma_pot_list[1][2]
    sigma_kin_v_3_1 = sigma_kin_vel_list[2][0]
    sigma_kin_p_3_1_s = sigma_kin_pos_list[3][0]
    sigma_kin_p_3_1_c = sigma_kin_pos_list[3][1]
    sigma_kin_p_3_1_off = sigma_kin_pos_list[3][2]
    sigma_kin_v_3_2 = sigma_kin_vel_list[2][1]
    sigma_kin_p_3_2_s = sigma_kin_pos_list[4][0]
    sigma_kin_p_3_2_c = sigma_kin_pos_list[4][1]
    sigma_kin_p_3_2_off = sigma_kin_pos_list[4][2]
    sigma_kin_v_3_3 = sigma_kin_vel_list[2][2]
    sigma_kin_p_3_3_s = sigma_kin_pos_list[5][0]
    sigma_kin_p_3_3_c = sigma_kin_pos_list[5][1]
    sigma_kin_p_3_3_off = sigma_kin_pos_list[5][2]
    sigma_pot_3_s = sigma_pot_list[2][0]
    sigma_pot_3_c = sigma_pot_list[2][1]
    sigma_pot_3_off = sigma_pot_list[2][2]
    sigma_kin_v_4_1 = sigma_kin_vel_list[3][0]
    sigma_kin_p_4_1_s = sigma_kin_pos_list[6][0]
    sigma_kin_p_4_1_c = sigma_kin_pos_list[6][1]
    sigma_kin_p_4_1_off = sigma_kin_pos_list[6][2]
    sigma_kin_v_4_2 = sigma_kin_vel_list[3][1]
    sigma_kin_p_4_2_s = sigma_kin_pos_list[7][0]
    sigma_kin_p_4_2_c = sigma_kin_pos_list[7][1]
    sigma_kin_p_4_2_off = sigma_kin_pos_list[7][2]
    sigma_kin_v_4_3 = sigma_kin_vel_list[3][2]
    sigma_kin_p_4_3_s = sigma_kin_pos_list[8][0]
    sigma_kin_p_4_3_c = sigma_kin_pos_list[8][1]
    sigma_kin_p_4_3_off = sigma_kin_pos_list[8][2]
    sigma_kin_v_4_4 = sigma_kin_vel_list[3][3]
    sigma_kin_p_4_4_s = sigma_kin_pos_list[9][0]
    sigma_kin_p_4_4_c = sigma_kin_pos_list[9][1]
    sigma_kin_p_4_4_off = sigma_kin_pos_list[9][2]
    sigma_pot_4_s = sigma_pot_list[3][0]
    sigma_pot_4_c = sigma_pot_list[3][1]
    sigma_pot_4_off = sigma_pot_list[3][2]

    
    x0 = dq_i1**2
    x1 = sigma_kin_v_1_1**2
    x2 = torch.sin(q_j1)
    x3 = torch.cos(q_i1)
    x4 = sigma_kin_p_1_1_c*x3
    x5 = torch.cos(q_j1)
    x6 = torch.sin(q_i1)
    x7 = sigma_kin_p_1_1_s*x6
    x8 = sigma_kin_p_1_1_off + x2*x7 + x4*x5
    x9 = x1*x8*(x2*x4 - x5*x7)
    x10 = torch.cos(q_i2)
    x11 = torch.cos(q_j2)
    x12 = x10*x11
    x13 = torch.sin(q_i2)
    x14 = torch.sin(q_j2)
    x15 = x13*x14
    x16 = sigma_kin_p_2_2_c*x12 + sigma_kin_p_2_2_off + sigma_kin_p_2_2_s*x15
    x17 = x16**2
    x18 = sigma_kin_p_2_1_c*x3
    x19 = sigma_kin_p_2_1_s*x6
    x20 = sigma_kin_p_2_1_off + x18*x5 + x19*x2
    x21 = x17*x20*(x18*x2 - x19*x5)
    x22 = dq_i1*dq_j1
    x23 = dq_i2*dq_j2
    x24 = sigma_kin_v_2_1*x22 + sigma_kin_v_2_2*x23
    x25 = 2*x24**2
    x26 = sigma_pot_1_c*x3
    x27 = sigma_pot_1_s*x6
    x28 = sigma_pot_2_c*x12 + sigma_pot_2_off + sigma_pot_2_s*x15
    x29 = torch.cos(q_i3)
    x30 = torch.cos(q_j3)
    x31 = x29*x30
    x32 = torch.sin(q_i3)
    x33 = torch.sin(q_j3)
    x34 = x32*x33
    x35 = sigma_pot_3_c*x31 + sigma_pot_3_off + sigma_pot_3_s*x34
    x36 = torch.cos(q_i4)
    x37 = torch.cos(q_j4)
    x38 = x36*x37
    x39 = torch.sin(q_i4)
    x40 = torch.sin(q_j4)
    x41 = x39*x40
    x42 = sigma_pot_4_c*x38 + sigma_pot_4_off + sigma_pot_4_s*x41
    x43 = 1.0*x35*x42
    x44 = dq_i4*sigma_kin_v_4_4
    x45 = 2*ddq_j4
    x46 = x44*x45
    x47 = sigma_kin_p_4_1_c*x3
    x48 = sigma_kin_p_4_1_s*x6
    x49 = sigma_kin_p_4_1_off + x2*x48 + x47*x5
    x50 = x49**2
    x51 = sigma_kin_p_4_2_c*x12 + sigma_kin_p_4_2_off + sigma_kin_p_4_2_s*x15
    x52 = x51**2
    x53 = sigma_kin_p_4_3_c*x31 + sigma_kin_p_4_3_off + sigma_kin_p_4_3_s*x34
    x54 = x53**2
    x55 = sigma_kin_p_4_4_c*x38 + sigma_kin_p_4_4_off + sigma_kin_p_4_4_s*x41
    x56 = x55**2
    x57 = x52*x54*x56
    x58 = x50*x57
    x59 = sigma_kin_v_4_1*x58
    x60 = dq_i1*x59
    x61 = sigma_kin_p_3_1_c*x3
    x62 = sigma_kin_p_3_1_s*x6
    x63 = sigma_kin_p_3_1_off + x2*x62 + x5*x61
    x64 = sigma_kin_p_3_2_c*x12 + sigma_kin_p_3_2_off + sigma_kin_p_3_2_s*x15
    x65 = x64**2
    x66 = sigma_kin_p_3_3_c*x31 + sigma_kin_p_3_3_off + sigma_kin_p_3_3_s*x34
    x67 = x66**2
    x68 = x65*x67
    x69 = x63*x68*(x2*x61 - x5*x62)
    x70 = dq_i3*dq_j3
    x71 = sigma_kin_v_3_1*x22 + sigma_kin_v_3_2*x23 + sigma_kin_v_3_3*x70
    x72 = 2*x71**2
    x73 = x49*x57*(x2*x47 - x48*x5)
    x74 = dq_j4*x44
    x75 = sigma_kin_v_4_1*x22 + sigma_kin_v_4_2*x23 + sigma_kin_v_4_3*x70 + x74
    x76 = 2*x75**2
    x77 = 4*dq_i1
    x78 = sigma_kin_v_4_1*x75
    x79 = x36*x40
    x80 = x37*x39
    x81 = x50*x52*x54*x55*(sigma_kin_p_4_4_c*x79 - sigma_kin_p_4_4_s*x80)
    x82 = dq_j4*x81
    x83 = 2*ddq_j3
    x84 = dq_i3*x83
    x85 = x63**2
    x86 = x68*x85
    x87 = sigma_kin_v_3_1*x86
    x88 = dq_i1*(sigma_kin_v_3_3*x87 + sigma_kin_v_4_3*x59)
    x89 = 2*ddq_j2
    x90 = dq_i2*x89
    x91 = x20**2
    x92 = x17*x91
    x93 = dq_i1*(sigma_kin_v_2_1*sigma_kin_v_2_2*x92 + sigma_kin_v_3_2*x87 + sigma_kin_v_4_2*x59)
    x94 = sigma_kin_v_3_1*x71
    x95 = x85*x94
    x96 = x29*x33
    x97 = x30*x32
    x98 = x65*x66*(sigma_kin_p_3_3_c*x96 - sigma_kin_p_3_3_s*x97)
    x99 = x50*x56
    x100 = x78*x99
    x101 = x52*x53*(sigma_kin_p_4_3_c*x96 - sigma_kin_p_4_3_s*x97)
    x102 = 2*ddq_j1
    x103 = sigma_kin_v_2_1*x24
    x104 = x10*x14
    x105 = x11*x13
    x106 = x16*x91*(sigma_kin_p_2_2_c*x104 - sigma_kin_p_2_2_s*x105)
    x107 = x64*x67*(sigma_kin_p_3_2_c*x104 - sigma_kin_p_3_2_s*x105)
    x108 = x51*x54*(sigma_kin_p_4_2_c*x104 - sigma_kin_p_4_2_s*x105)
    x109 = sigma_pot_1_off + x2*x27 + x26*x5
    x110 = sigma_kin_v_4_2*x58
    x111 = x107*x85
    x112 = x108*x99
    x113 = 4*dq_i2
    x114 = sigma_kin_v_4_2*x75
    x115 = sigma_kin_v_3_2*sigma_kin_v_3_3*x86 + sigma_kin_v_4_3*x110
    x116 = sigma_kin_v_3_2*x71
    x117 = x116*x85
    x118 = x114*x99
    x119 = sigma_kin_v_2_2*x24
    x120 = 1.0*x109*x28
    x121 = x45*x58
    x122 = sigma_kin_v_4_3*x44
    x123 = x85*x98
    x124 = x101*x99
    x125 = 4*dq_i3
    x126 = sigma_kin_v_4_3*x75
    x127 = sigma_kin_v_3_3*x71
    x128 = 4*x75
    x129 = x128*x44
    
    K_block_list = []
    K_block_list.append(2*dq_j1**2*x0*x9 - dq_j2*x77*(x100*x108 + x103*x106 + x107*x95) - dq_j3*x77*(x100*x101 + x95*x98) + x0*x102*(sigma_kin_v_2_1**2*x92 + sigma_kin_v_3_1**2*x86 + sigma_kin_v_4_1**2*x58 + x1*x8**2) + x21*x25 - 4*x22*(x103*x21 + x22*x9 + x69*x94 + x73*x78) + x28*x43*(x2*x26 - x27*x5) + x46*x60 + x69*x72 + x73*x76 - x77*x78*x82 + x84*x88 + x90*x93)
    K_block_list.append(dq_i2**2*x89*(sigma_kin_v_2_2**2*x92 + sigma_kin_v_3_2**2*x86 + sigma_kin_v_4_2**2*x58) + dq_i2*x102*x93 + dq_i2*x110*x46 + dq_i2*x115*x84 - dq_j1*x113*(x114*x73 + x116*x69 + x119*x21) - dq_j3*x113*(x101*x118 + x117*x98) + x106*x25 + x109*x43*(sigma_pot_2_c*x104 - sigma_pot_2_s*x105) + x111*x72 + x112*x76 - x113*x114*x82 - 4*x23*(x106*x119 + x107*x117 + x108*x118))
    K_block_list.append(dq_i3**2*x83*(sigma_kin_v_3_3**2*x86 + sigma_kin_v_4_3**2*x58) + dq_i3*x102*x88 + dq_i3*x115*x90 + dq_i3*x121*x122 - dq_j1*x125*(x126*x73 + x127*x69) - dq_j2*x125*(x111*x127 + x112*x126) + x120*x42*(sigma_pot_3_c*x96 - sigma_pot_3_s*x97) + x123*x72 + x124*x76 - x125*x126*x82 - 4*x70*(x123*x127 + x124*x126))
    K_block_list.append(dq_i4**2*sigma_kin_v_4_4**2*x121 - dq_j1*x129*x73 - dq_j2*x112*x129 - dq_j3*x124*x129 + x102*x44*x60 + x110*x44*x90 + x120*x35*(sigma_pot_4_c*x79 - sigma_pot_4_s*x80) + x122*x58*x84 - x128*x74*x81 + x76*x81)
    
    return K_block_list

