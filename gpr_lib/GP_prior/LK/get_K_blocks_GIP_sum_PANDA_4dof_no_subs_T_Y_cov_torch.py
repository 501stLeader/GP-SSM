import torch

def get_K_blocks_GIP_sum_PANDA_4dof_no_subs(X1, X2, pos_indices, vel_indices, acc_indices, sigma_kin_vel_list, sigma_kin_pos_list, sigma_pot_list):

    q_i1 = X1[:,pos_indices[0]:pos_indices[0]+1]
    dq_i1 = X1[:,vel_indices[0]:vel_indices[0]+1]
    ddq_i1 = X1[:,acc_indices[0]:acc_indices[0]+1]
    q_j1 = X2[:,pos_indices[0]:pos_indices[0]+1].transpose(1,0)
    dq_j1 = X2[:,vel_indices[0]:vel_indices[0]+1].transpose(1,0)
    ddq_j1 = X2[:,acc_indices[0]:acc_indices[0]+1].transpose(1,0)
    q_i2 = X1[:,pos_indices[1]:pos_indices[1]+1]
    dq_i2 = X1[:,vel_indices[1]:vel_indices[1]+1]
    ddq_i2 = X1[:,acc_indices[1]:acc_indices[1]+1]
    q_j2 = X2[:,pos_indices[1]:pos_indices[1]+1].transpose(1,0)
    dq_j2 = X2[:,vel_indices[1]:vel_indices[1]+1].transpose(1,0)
    ddq_j2 = X2[:,acc_indices[1]:acc_indices[1]+1].transpose(1,0)
    q_i3 = X1[:,pos_indices[2]:pos_indices[2]+1]
    dq_i3 = X1[:,vel_indices[2]:vel_indices[2]+1]
    ddq_i3 = X1[:,acc_indices[2]:acc_indices[2]+1]
    q_j3 = X2[:,pos_indices[2]:pos_indices[2]+1].transpose(1,0)
    dq_j3 = X2[:,vel_indices[2]:vel_indices[2]+1].transpose(1,0)
    ddq_j3 = X2[:,acc_indices[2]:acc_indices[2]+1].transpose(1,0)
    q_i4 = X1[:,pos_indices[3]:pos_indices[3]+1]
    dq_i4 = X1[:,vel_indices[3]:vel_indices[3]+1]
    ddq_i4 = X1[:,acc_indices[3]:acc_indices[3]+1]
    q_j4 = X2[:,pos_indices[3]:pos_indices[3]+1].transpose(1,0)
    dq_j4 = X2[:,vel_indices[3]:vel_indices[3]+1].transpose(1,0)
    ddq_j4 = X2[:,acc_indices[3]:acc_indices[3]+1].transpose(1,0)

    sigma_kin_v_1_1 = sigma_kin_vel_list[0][0]
    sigma_kin_p_1_1_s = sigma_kin_pos_list[0][0]
    sigma_kin_p_1_1_c = sigma_kin_pos_list[0][1]
    sigma_kin_p_1_1_off = sigma_kin_pos_list[0][2]
    sigma_pot_1_s = sigma_pot_list[0][0]
    sigma_pot_1_c = sigma_pot_list[0][1]
    sigma_pot_1_off = sigma_pot_list[0][2]
    sigma_kin_v_2_1 = sigma_kin_vel_list[1][0]
    sigma_kin_p_2_1_s = sigma_kin_pos_list[1][0]
    sigma_kin_p_2_1_c = sigma_kin_pos_list[1][1]
    sigma_kin_p_2_1_off = sigma_kin_pos_list[1][2]
    sigma_kin_v_2_2 = sigma_kin_vel_list[1][1]
    sigma_kin_p_2_2_s = sigma_kin_pos_list[2][0]
    sigma_kin_p_2_2_c = sigma_kin_pos_list[2][1]
    sigma_kin_p_2_2_off = sigma_kin_pos_list[2][2]
    sigma_pot_2_s = sigma_pot_list[1][0]
    sigma_pot_2_c = sigma_pot_list[1][1]
    sigma_pot_2_off = sigma_pot_list[1][2]
    sigma_kin_v_3_1 = sigma_kin_vel_list[2][0]
    sigma_kin_p_3_1_s = sigma_kin_pos_list[3][0]
    sigma_kin_p_3_1_c = sigma_kin_pos_list[3][1]
    sigma_kin_p_3_1_off = sigma_kin_pos_list[3][2]
    sigma_kin_v_3_2 = sigma_kin_vel_list[2][1]
    sigma_kin_p_3_2_s = sigma_kin_pos_list[4][0]
    sigma_kin_p_3_2_c = sigma_kin_pos_list[4][1]
    sigma_kin_p_3_2_off = sigma_kin_pos_list[4][2]
    sigma_kin_v_3_3 = sigma_kin_vel_list[2][2]
    sigma_kin_p_3_3_s = sigma_kin_pos_list[5][0]
    sigma_kin_p_3_3_c = sigma_kin_pos_list[5][1]
    sigma_kin_p_3_3_off = sigma_kin_pos_list[5][2]
    sigma_pot_3_s = sigma_pot_list[2][0]
    sigma_pot_3_c = sigma_pot_list[2][1]
    sigma_pot_3_off = sigma_pot_list[2][2]
    sigma_kin_v_4_1 = sigma_kin_vel_list[3][0]
    sigma_kin_p_4_1_s = sigma_kin_pos_list[6][0]
    sigma_kin_p_4_1_c = sigma_kin_pos_list[6][1]
    sigma_kin_p_4_1_off = sigma_kin_pos_list[6][2]
    sigma_kin_v_4_2 = sigma_kin_vel_list[3][1]
    sigma_kin_p_4_2_s = sigma_kin_pos_list[7][0]
    sigma_kin_p_4_2_c = sigma_kin_pos_list[7][1]
    sigma_kin_p_4_2_off = sigma_kin_pos_list[7][2]
    sigma_kin_v_4_3 = sigma_kin_vel_list[3][2]
    sigma_kin_p_4_3_s = sigma_kin_pos_list[8][0]
    sigma_kin_p_4_3_c = sigma_kin_pos_list[8][1]
    sigma_kin_p_4_3_off = sigma_kin_pos_list[8][2]
    sigma_kin_v_4_4 = sigma_kin_vel_list[3][3]
    sigma_kin_p_4_4_s = sigma_kin_pos_list[9][0]
    sigma_kin_p_4_4_c = sigma_kin_pos_list[9][1]
    sigma_kin_p_4_4_off = sigma_kin_pos_list[9][2]
    sigma_pot_4_s = sigma_pot_list[3][0]
    sigma_pot_4_c = sigma_pot_list[3][1]
    sigma_pot_4_off = sigma_pot_list[3][2]

    
    x0 = dq_i1**2
    x1 = sigma_kin_v_1_1**2
    x2 = torch.cos(q_i1)
    x3 = torch.sin(q_j1)
    x4 = x2*x3
    x5 = torch.cos(q_j1)
    x6 = torch.sin(q_i1)
    x7 = x5*x6
    x8 = x2*x5
    x9 = x3*x6
    x10 = sigma_kin_p_1_1_c*x8 + sigma_kin_p_1_1_off + sigma_kin_p_1_1_s*x9
    x11 = x1*x10*(sigma_kin_p_1_1_c*x4 - sigma_kin_p_1_1_s*x7)
    x12 = dq_i1*dq_j1
    x13 = dq_i2*dq_j2
    x14 = sigma_kin_v_2_1*x12 + sigma_kin_v_2_2*x13
    x15 = x14**2
    x16 = torch.cos(q_i2)
    x17 = torch.cos(q_j2)
    x18 = x16*x17
    x19 = torch.sin(q_i2)
    x20 = torch.sin(q_j2)
    x21 = x19*x20
    x22 = sigma_kin_p_2_2_c*x18 + sigma_kin_p_2_2_off + sigma_kin_p_2_2_s*x21
    x23 = x22**2
    x24 = sigma_kin_p_2_1_c*x8 + sigma_kin_p_2_1_off + sigma_kin_p_2_1_s*x9
    x25 = x23*x24*(sigma_kin_p_2_1_c*x4 - sigma_kin_p_2_1_s*x7)
    x26 = sigma_kin_p_4_1_c*x8 + sigma_kin_p_4_1_off + sigma_kin_p_4_1_s*x9
    x27 = x26**2
    x28 = sigma_kin_p_4_2_c*x18 + sigma_kin_p_4_2_off + sigma_kin_p_4_2_s*x21
    x29 = x28**2
    x30 = torch.cos(q_i3)
    x31 = torch.cos(q_j3)
    x32 = x30*x31
    x33 = torch.sin(q_i3)
    x34 = torch.sin(q_j3)
    x35 = x33*x34
    x36 = sigma_kin_p_4_3_c*x32 + sigma_kin_p_4_3_off + sigma_kin_p_4_3_s*x35
    x37 = x36**2
    x38 = torch.cos(q_j4)
    x39 = sigma_kin_p_4_4_c*torch.cos(q_i4)
    x40 = torch.sin(q_j4)
    x41 = sigma_kin_p_4_4_s*torch.sin(q_i4)
    x42 = sigma_kin_p_4_4_off + x38*x39 + x40*x41
    x43 = x42**2
    x44 = x29*x37*x43
    x45 = x27*x44
    x46 = sigma_kin_v_4_1*x45
    x47 = dq_i4*sigma_kin_v_4_4
    x48 = ddq_j4*x47
    x49 = dq_i3*dq_j3
    x50 = sigma_kin_v_3_1*x12 + sigma_kin_v_3_2*x13 + sigma_kin_v_3_3*x49
    x51 = x50**2
    x52 = sigma_kin_p_3_1_c*x8 + sigma_kin_p_3_1_off + sigma_kin_p_3_1_s*x9
    x53 = sigma_kin_p_3_2_c*x18 + sigma_kin_p_3_2_off + sigma_kin_p_3_2_s*x21
    x54 = x53**2
    x55 = sigma_kin_p_3_3_c*x32 + sigma_kin_p_3_3_off + sigma_kin_p_3_3_s*x35
    x56 = x55**2
    x57 = x54*x56
    x58 = x52*x57*(sigma_kin_p_3_1_c*x4 - sigma_kin_p_3_1_s*x7)
    x59 = dq_j4*x47
    x60 = sigma_kin_v_4_1*x12 + sigma_kin_v_4_2*x13 + sigma_kin_v_4_3*x49 + x59
    x61 = x60**2
    x62 = x26*x61
    x63 = sigma_kin_p_4_1_c*x4 - sigma_kin_p_4_1_s*x7
    x64 = x44*x63
    x65 = 2*dq_i1
    x66 = sigma_kin_v_4_1*x60
    x67 = -x38*x41 + x39*x40
    x68 = dq_j4*x27*x29*x37*x42*x67
    x69 = ddq_j3*dq_i3
    x70 = x52**2
    x71 = x57*x70
    x72 = sigma_kin_v_3_1*x71
    x73 = dq_i1*(sigma_kin_v_3_3*x72 + sigma_kin_v_4_3*x46)
    x74 = ddq_j2*dq_i2
    x75 = x24**2
    x76 = x23*x75
    x77 = dq_i1*(sigma_kin_v_2_1*sigma_kin_v_2_2*x76 + sigma_kin_v_3_2*x72 + sigma_kin_v_4_2*x46)
    x78 = x30*x34
    x79 = x31*x33
    x80 = x54*x55*(sigma_kin_p_3_3_c*x78 - sigma_kin_p_3_3_s*x79)
    x81 = sigma_kin_v_3_1*x50
    x82 = x70*x81
    x83 = sigma_kin_p_4_3_c*x78 - sigma_kin_p_4_3_s*x79
    x84 = x29*x36*x83
    x85 = x27*x43
    x86 = x66*x85
    x87 = x16*x20
    x88 = x17*x19
    x89 = x22*x75*(sigma_kin_p_2_2_c*x87 - sigma_kin_p_2_2_s*x88)
    x90 = sigma_kin_v_2_1*x14
    x91 = x53*x56*(sigma_kin_p_3_2_c*x87 - sigma_kin_p_3_2_s*x88)
    x92 = sigma_kin_p_4_2_c*x87 - sigma_kin_p_4_2_s*x88
    x93 = x28*x37*x92
    x94 = x26*x64
    x95 = sigma_kin_v_4_2*x45
    x96 = x51*x70
    x97 = x61*x85
    x98 = 2*dq_i2
    x99 = sigma_kin_v_4_2*x60
    x100 = sigma_kin_v_3_2*sigma_kin_v_3_3*x71 + sigma_kin_v_4_3*x95
    x101 = sigma_kin_v_3_2*x50
    x102 = x101*x70
    x103 = x85*x99
    x104 = sigma_kin_v_2_2*x14
    x105 = 2*dq_i3
    x106 = sigma_kin_v_4_3*x60
    x107 = sigma_kin_v_3_3*x50
    x108 = x107*x70
    x109 = x106*x85
    x110 = x28*x36
    x111 = x110*x42
    x112 = x111*x26
    x113 = x112*x47
    x114 = x110*x67
    x115 = x47*x60
    x116 = 2*x26
    x117 = x115*x116*x42
    
    K_block_list = []
    K_block_list.append(2*ddq_j1*x0*(sigma_kin_v_2_1**2*x76 + sigma_kin_v_3_1**2*x71 + sigma_kin_v_4_1**2*x45 + x1*x10**2) + 2*dq_i1*x46*x48 + 2*dq_j1**2*x0*x11 - 2*dq_j2*x65*(x82*x91 + x86*x93 + x89*x90) - 2*dq_j3*x65*(x80*x82 + x84*x86) - 4*x12*(x11*x12 + x25*x90 + x58*x81 + x66*x94) + 2*x15*x25 + 2*x51*x58 + 2*x62*x64 - 2*x65*x66*x68 + 2*x69*x73 + 2*x74*x77)
    K_block_list.append(2*ddq_j1*dq_i2*x77 + 2*ddq_j2*dq_i2**2*(sigma_kin_v_2_2**2*x76 + sigma_kin_v_3_2**2*x71 + sigma_kin_v_4_2**2*x45) + 2*dq_i2*x100*x69 + 2*dq_i2*x48*x95 - 2*dq_j1*x98*(x101*x58 + x104*x25 + x94*x99) - 2*dq_j3*x98*(x102*x80 + x103*x84) - 4*x13*(x102*x91 + x103*x93 + x104*x89) + 2*x15*x89 - 2*x68*x98*x99 + 2*x91*x96 + 2*x93*x97)
    K_block_list.append(2*ddq_j1*dq_i3*x73 + 2*ddq_j3*dq_i3**2*(sigma_kin_v_3_3**2*x71 + sigma_kin_v_4_3**2*x45) + 2*dq_i3*sigma_kin_v_4_3*x45*x48 + 2*dq_i3*x100*x74 - 2*dq_j1*x105*(x106*x94 + x107*x58) - 2*dq_j2*x105*(x108*x91 + x109*x93) - 2*x105*x106*x68 - 4*x49*(x108*x80 + x109*x84) + 2*x80*x96 + 2*x84*x97)
    K_block_list.append(x111*x116*(ddq_j1*dq_i1*sigma_kin_v_4_1*x113 + ddq_j4*dq_i4**2*sigma_kin_v_4_4**2*x112 - 2*dq_j1*x111*x115*x63 - dq_j2*x117*x36*x92 - dq_j3*x117*x28*x83 + sigma_kin_v_4_2*x113*x74 + sigma_kin_v_4_3*x113*x69 - x114*x116*x59*x60 + x114*x62))
    
    return K_block_list

