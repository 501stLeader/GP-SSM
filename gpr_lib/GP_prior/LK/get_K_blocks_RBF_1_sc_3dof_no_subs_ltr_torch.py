import torch

def get_K_blocks_RBF_1_sc_3dof_no_subs(X1, X2, pos_indices, vel_indices, acc_indices, lL, sL):

    q_i1 = X1[:,pos_indices[0]:pos_indices[0]+1]
    dq_i1 = X1[:,vel_indices[0]:vel_indices[0]+1]
    ddq_i1 = X1[:,acc_indices[0]:acc_indices[0]+1]
    q_j1 = X2[:,pos_indices[0]:pos_indices[0]+1].transpose(1,0)
    dq_j1 = X2[:,vel_indices[0]:vel_indices[0]+1].transpose(1,0)
    ddq_j1 = X2[:,acc_indices[0]:acc_indices[0]+1].transpose(1,0)
    q_i2 = X1[:,pos_indices[1]:pos_indices[1]+1]
    dq_i2 = X1[:,vel_indices[1]:vel_indices[1]+1]
    ddq_i2 = X1[:,acc_indices[1]:acc_indices[1]+1]
    q_j2 = X2[:,pos_indices[1]:pos_indices[1]+1].transpose(1,0)
    dq_j2 = X2[:,vel_indices[1]:vel_indices[1]+1].transpose(1,0)
    ddq_j2 = X2[:,acc_indices[1]:acc_indices[1]+1].transpose(1,0)
    q_i3 = X1[:,pos_indices[2]:pos_indices[2]+1]
    dq_i3 = X1[:,vel_indices[2]:vel_indices[2]+1]
    ddq_i3 = X1[:,acc_indices[2]:acc_indices[2]+1]
    q_j3 = X2[:,pos_indices[2]:pos_indices[2]+1].transpose(1,0)
    dq_j3 = X2[:,vel_indices[2]:vel_indices[2]+1].transpose(1,0)
    ddq_j3 = X2[:,acc_indices[2]:acc_indices[2]+1].transpose(1,0)

    lL1 = lL[0]
    lL4 = lL[3]
    lL7 = lL[6]
    lL2 = lL[1]
    lL5 = lL[4]
    lL8 = lL[7]
    lL3 = lL[2]
    lL6 = lL[5]
    lL9 = lL[8]

    
    x0 = torch.sin(q_i1)
    x1 = torch.sin(q_j1)
    x2 = lL1**(-2.0)
    x3 = torch.cos(q_i1)
    x4 = torch.cos(q_j1)
    x5 = lL4**(-2.0)
    x6 = lL7**(-2.0)
    x7 = dq_i1 - dq_j1
    x8 = x0*x1*x2 + x3*x4*x5
    x9 = 4*x6
    x10 = dq_i2 - dq_j2
    x11 = x10*x7
    x12 = x0 - x1
    x13 = x12*x5
    x14 = x3 - x4
    x15 = x14*x2
    x16 = -x1*x15 + x13*x4
    x17 = lL8**(-2.0)
    x18 = ddq_i2*x17
    x19 = x16*x18
    x20 = x11*x19
    x21 = lL9**(-2.0)
    x22 = ddq_i3*x21
    x23 = dq_i3 - dq_j3
    x24 = x23*x7
    x25 = x22*x24
    x26 = x16*x9
    x27 = x7**2
    x28 = x27*x6
    x29 = 2*x28
    x30 = -x29
    x31 = x30 + 1
    x32 = -x0*x15 + x13*x3
    x33 = 2*x32
    x34 = x16*x33
    x35 = dq_i1*x32
    x36 = x35*x7
    x37 = torch.sin(q_i2)
    x38 = torch.sin(q_j2)
    x39 = x37 - x38
    x40 = lL5**(-2.0)
    x41 = torch.cos(q_i2)
    x42 = x40*x41
    x43 = x39*x42
    x44 = torch.cos(q_j2)
    x45 = x41 - x44
    x46 = lL2**(-2.0)
    x47 = x37*x46
    x48 = x45*x47
    x49 = x43 - x48
    x50 = x16*x49
    x51 = x50*x7
    x52 = torch.sin(q_i3)
    x53 = torch.sin(q_j3)
    x54 = x52 - x53
    x55 = lL6**(-2.0)
    x56 = torch.cos(q_i3)
    x57 = x55*x56
    x58 = x54*x57
    x59 = torch.cos(q_j3)
    x60 = x56 - x59
    x61 = lL3**(-2.0)
    x62 = x52*x61
    x63 = x60*x62
    x64 = x58 - x63
    x65 = x16*x64
    x66 = x65*x7
    x67 = x11*x33
    x68 = 2*x10
    x69 = x22*x23
    x70 = x10**2
    x71 = x17*x70
    x72 = 4*x28
    x73 = x71*x72
    x74 = x35*x72
    x75 = dq_i2*x49
    x76 = x72*x75
    x77 = dq_i3*x64
    x78 = x72*x77
    x79 = -x10
    x80 = x30 + 3
    x81 = -x7
    x82 = ddq_i1*x6
    x83 = 2*x82
    x84 = x80*x81*x83
    x85 = x10*x23
    x86 = x72*x85
    x87 = 2*x71
    x88 = ddq_i2*x87
    x89 = dq_i1*x33
    x90 = x10*x89
    x91 = 2*x49
    x92 = dq_i2*x91
    x93 = x10*x92
    x94 = 2*x64
    x95 = dq_i3*x94
    x96 = x10*x95
    x97 = -ddq_i2 + x88 + x90 + x93 + x96
    x98 = ddq_j2*x17
    x99 = x6*x98
    x100 = 2*x99
    x101 = x18*x68
    x102 = x23**2
    x103 = x102*x21
    x104 = x103*x72
    x105 = -x23
    x106 = 2*x103
    x107 = ddq_i3*x106
    x108 = x23*x89
    x109 = x23*x92
    x110 = x23*x95
    x111 = -ddq_i3 + x107 + x108 + x109 + x110
    x112 = ddq_j3*x21
    x113 = x112*x6
    x114 = 2*x113
    x115 = x81**2
    x116 = 4/lL7**4
    x117 = x116*x7**3
    x118 = 6*x6
    x119 = x49*x7
    x120 = dq_i2*x119
    x121 = x7*x77
    x122 = x10*x18
    x123 = x11*x18
    x124 = ddq_j1*x6
    x125 = -x38*x45*x46 + x39*x40*x44
    x126 = 2*x22*x23
    x127 = x125*x126
    x128 = x38*x47 + x42*x44
    x129 = dq_i2*x128
    x130 = x125*x7*x83
    x131 = -dq_i2*x128
    x132 = dq_i1*x125*x33
    x133 = x125*x91
    x134 = dq_i2*x133
    x135 = x125*x64
    x136 = 2*dq_i3
    x137 = x135*x136
    x138 = x101*x125
    x139 = x131 + x132 + x134 + x137 + x138
    x140 = -x53*x60*x61 + x54*x55*x59
    x141 = x101*x140
    x142 = x53*x62 + x57*x59
    x143 = dq_i3*x142
    x144 = x140*x7
    x145 = x144*x83
    x146 = -dq_i3*x142
    x147 = dq_i1*x140*x33
    x148 = x140*x92
    x149 = x140*x94
    x150 = dq_i3*x149
    x151 = x126*x140
    x152 = x146 + x147 + x148 + x150 + x151
    x153 = -dq_i1*x8
    x154 = dq_i1*x8
    x155 = x19*x68
    x156 = x126*x16
    x157 = x16*x83
    x158 = x157*x7
    x159 = dq_i1*x34
    x160 = 2*dq_i2
    x161 = x160*x50
    x162 = x136*x65
    x163 = sL*torch.exp(-x103 - x12**2*x5 - x14**2*x2 - x28 - x39**2*x40 - x45**2*x46 - x54**2*x55 - x60**2*x61 - x71)
    x164 = 2*x163
    x165 = x10*x17
    x166 = -x87
    x167 = x166 + 1
    x168 = x167*x19
    x169 = x11*x17
    x170 = x10*x65
    x171 = x136*x17
    x172 = ddq_i1*x165
    x173 = x172*x23
    x174 = x167*x18
    x175 = x119*x23
    x176 = dq_i1*x67
    x177 = x160*x165
    x178 = x11*x64
    x179 = x171*x178
    x180 = 2*x119
    x181 = 2*x25
    x182 = x166 + 3
    x183 = 2*x123
    x184 = 4*x71
    x185 = ddq_i1*x29
    x186 = ddq_i1 - x119*x160 - x185 - x7*x89 - x7*x95
    x187 = ddq_i1*x73 - ddq_i1*x87 + x10*x180 + x120*x184 + x121*x184 - x181 - x182*x183 + x184*x25 + x184*x36 + x186
    x188 = 6*x82
    x189 = x169*x188
    x190 = ddq_i1*x16
    x191 = x165*x190
    x192 = x136*x66
    x193 = 2*dq_j1*x6
    x194 = x140*x172
    x195 = x119*x140
    x196 = dq_j3*x6
    x197 = 2*x125
    x198 = x125*x169
    x199 = 2*x7
    x200 = 4*x35
    x201 = x125*x165
    x202 = 4*x201
    x203 = x135*x7
    x204 = 4*dq_i3
    x205 = dq_j2*x6
    x206 = 4*x163
    x207 = 4*x82
    x208 = 4*x75
    x209 = x10*x135
    x210 = x103*x184
    x211 = x184*x35
    x212 = x184*x75
    x213 = x184*x77
    x214 = 2*x105*x79
    x215 = x184*x82
    x216 = x112*x17
    x217 = x79**2
    x218 = 4/lL8**4
    x219 = x10**3*x218
    x220 = 6*x165
    x221 = x7*x82
    x222 = 2*x98
    x223 = x153 + x158 + x159 + x161 + x162
    x224 = x21*x23
    x225 = x154*x224
    x226 = -x106
    x227 = x226 + 1
    x228 = x22*x227
    x229 = x16*x228
    x230 = x21*x24
    x231 = x159*x224
    x232 = x161*x224
    x233 = ddq_i1*x224
    x234 = x185*x224
    x235 = x160*x175*x21
    x236 = x136*x224
    x237 = -ddq_i2*x230 - x10*x233 + x10*x234 + x10*x235 - x11*x228 + x176*x224 + x178*x236 + x178 + x230*x88
    x238 = x226 + 3
    x239 = 4*x103
    x240 = ddq_i1*x104 - ddq_i1*x106 + x120*x239 + x121*x239 + x123*x239 - x181*x238 - x183 + x186 + x239*x36 + x24*x94
    x241 = x188*x230
    x242 = -x108*x21 - x109*x21 - x110*x21 - x58 + x63
    x243 = x190*x224
    x244 = x125*x228
    x245 = 2*x140
    x246 = x140*x224
    x247 = 4*x246
    x248 = x140*x228
    x249 = x140*x230
    x250 = 4*x77
    x251 = x230*x83
    x252 = x132*x224
    x253 = x134*x224
    x254 = x11*x83
    x255 = x10*x103
    x256 = ddq_i2*x106 - ddq_i2*x210 - x10*x239*x77 - x11*x239*x82 - x200*x255 - x208*x255 + x214*x22*x238 + x254 - x85*x94 + x97
    x257 = 6*x224
    x258 = x122*x257
    x259 = ddq_i2*x224
    x260 = x224*x88
    x261 = x200*x246
    x262 = x208*x246
    x263 = x246*x250
    x264 = x105**2
    x265 = 4/lL9**4
    x266 = x23**3*x265
    
    K_block_list = []
    K_block_list.append(x164*(2*ddq_i1*x16*x31*x6 + 2*dq_i1*x6*x7*x8 - dq_i2*x51*x9 - dq_i3*x66*x9 + 2*dq_j1*x6*(4*ddq_i2*x10*x16*x17*x27*x6 + 4*ddq_i3*x16*x21*x23*x27*x6 + 4*dq_i1*x16*x27*x32*x6 + 4*dq_i2*x16*x27*x49*x6 + 4*dq_i3*x16*x27*x6*x64 - x153 - x154*x29 - x155 - x156 - x158*x80 - x159 + 2*x16*x32*x7 - x161 - x162 - x7*x8) + 2*dq_j2*x6*(4*ddq_i2*x10*x125*x17*x27*x6 + 4*ddq_i3*x125*x21*x23*x27*x6 + 4*dq_i1*x125*x27*x32*x6 + 4*dq_i2*x125*x27*x49*x6 + 4*dq_i3*x125*x27*x6*x64 + 2*x125*x32*x7 - x127 - x129*x29 - x130*x80 - x139) + 2*dq_j3*x6*(4*ddq_i2*x10*x140*x17*x27*x6 + 4*ddq_i3*x140*x21*x23*x27*x6 + 4*dq_i1*x140*x27*x32*x6 + 4*dq_i2*x140*x27*x49*x6 + 4*dq_i3*x140*x27*x6*x64 + 2*x140*x32*x7 - x141 - x143*x29 - x145*x80 - x152) + x0*x1*x2 - x100*(ddq_i2*x29 - ddq_i2*x73 - x10*x74 - x10*x76 - x10*x78 - x22*x86 - x67 + x68*x69 + x79*x84 + x97) - x114*(-ddq_i3*x104 + ddq_i3*x29 + x101*x23 + x105*x84 + x111 - x18*x86 - x23*x74 - x23*x76 - x23*x78 - x24*x33) - 2*x124*(-x117*x122 - x117*x35 - x117*x69 - x117*x75 - x117*x77 + x118*x120 + x118*x121 + x118*x123 + x118*x25 + x118*x36 - x28*x33 + x32 + x82*(-x115*x116*x27 + 10*x115*x6 - x80)) - x20*x9 - x25*x26 - x26*x36 + x3*x4*x5 - x34))
    K_block_list.append(x206*(x114*(-ddq_i3*x169 + x107*x169 + x17*x176*x23 + x173*x29 - x173 - x174*x24 + x175*x177 + x175 + x179*x23) + x124*(x117*x172 - x126*x165 + x165*x69*x72 + x165*x74 + x165*x76 + x165*x78 - x17*x90 - x17*x93 - x17*x96 + x18*(x166 + x31 + x73) - x189 + x29*x49 - x43 + x48) + x154*x165 - x156*x165 - x157*x169 - x159*x165 - x161*x165 + x168 - x170*x171 + x187*x99 + x193*(-x154*x169 + x156*x169 + x159*x169 + x165*x192 - x168*x7 + x177*x51 + x191*x29 - x191 + x51) + 2*x196*(x140*x179 - x143*x169 - x144*x174 + x147*x169 + x151*x169 + x177*x195 + x194*x29 - x194 + x195) + x205*(x120*x202 + x125*x172*x72 - x125*x174*x199 + x125*x180 - x128*x7 - 2*x129*x169 + x165*x203*x204 - x172*x197 + x198*x200 + 4*x198*x69) - x50))
    K_block_list.append(x164*(2*ddq_i2*x125*x167*x17 + 2*ddq_j1*x17*x187*x6 + 2*dq_i2*x10*x128*x17 + 2*dq_j1*x17*(4*ddq_i1*x16*x17*x6*x7*x70 + 4*ddq_i3*x16*x17*x21*x23*x70 + 4*dq_i1*x16*x17*x32*x70 + 4*dq_i2*x16*x17*x49*x70 + 4*dq_i3*x16*x17*x64*x70 + 2*x10*x16*x49 - x154*x87 - x155*x182 - x156 - x223) + 2*dq_j2*x17*(4*ddq_i1*x125*x17*x6*x7*x70 + 4*ddq_i3*x125*x17*x21*x23*x70 + 4*dq_i1*x125*x17*x32*x70 + 4*dq_i2*x125*x17*x49*x70 + 4*dq_i3*x125*x17*x64*x70 + 2*x10*x125*x49 - x10*x128 - x127 - x129*x87 - x130 - x131 - x132 - x134 - x137 - x138*x182) + 2*dq_j3*x17*(4*ddq_i1*x140*x17*x6*x7*x70 + 4*ddq_i3*x140*x17*x21*x23*x70 + 4*dq_i1*x140*x17*x32*x70 + 4*dq_i2*x140*x17*x49*x70 + 4*dq_i3*x140*x17*x64*x70 + 2*x10*x140*x49 - x141*x182 - x143*x87 - x145 - x152) - x133 - x17*x204*x209 - x198*x207 - x200*x201 - x201*x208 - x202*x69 - 2*x216*(-ddq_i3*x210 + ddq_i3*x87 - x10*x23*x91 + x111 + x18*x182*x214 - x211*x23 - x212*x23 - x213*x23 - x215*x24 + x24*x83) - x222*(x18*(10*x17*x217 - x182 - x217*x218*x70) + x189 - x219*x221 - x219*x35 - x219*x69 - x219*x75 - x219*x77 + x220*x35 + x220*x69 + x220*x75 + x220*x77 - x49*x87 + x49) + x37*x38*x46 + x40*x41*x44))
    K_block_list.append(x206*(x100*x237 + x113*x240 + x124*(-x101*x224 + x117*x233 + x122*x224*x72 + x22*(x104 + x226 + x31) + x224*x74 + x224*x76 + x224*x78 - x241 + x242 + x29*x64) - x155*x224 - x157*x230 - x162*x224 + x193*(-x154*x230 + x159*x230 + x160*x224*x51 + x192*x224 + 2*x20*x224 - x229*x7 + x243*x29 - x243 + x66) + x196*(4*dq_i2*x195*x224 + x123*x247 + x140*x233*x72 - x142*x7 - 2*x143*x230 + x149*x7 - x199*x248 + x200*x249 - x233*x245 + x249*x250) + 2*x205*(x123*x197*x224 - x125*x233 + x125*x234 + x125*x235 - x129*x230 + x132*x230 + x203*x236 + x203 - x244*x7) + x225 + x229 - x231 - x232 - x65))
    K_block_list.append(x206*(ddq_i3*x125*x21*x227 + 2*ddq_j1*x17*x237*x6 + ddq_j2*x17*(x211*x224 + x212*x224 + x213*x224 + x215*x230 + x219*x259 + x22*(x167 + x210 + x226) + x242 - x251 - x258 + x64*x87) + dq_i2*x128*x21*x23 + 2*dq_j1*x17*(-x10*x225 - x10*x229 + x10*x231 + x10*x232 + x11*x157*x224 - x16*x259 + x16*x260 + x170*x236 + x170) + 2*dq_j2*x17*(-x10*x129*x224 - x10*x244 + x10*x252 + x10*x253 + x125*x224*x254 - x125*x259 + x125*x260 + x209*x236 + x209) + dq_j3*x17*(-x10*x142 + x10*x149 + x10*x261 + x10*x262 + x10*x263 + x11*x207*x246 + x140*x184*x259 - x143*x224*x68 - x245*x259 - x248*x68) - x125*x251 - x135 - x137*x224 - x138*x224 - x216*x256 - x252 - x253))
    K_block_list.append(x164*(2*ddq_i3*x140*x21*x227 + 2*ddq_j1*x21*x240*x6 + 2*dq_i3*x142*x21*x23 + 2*dq_j1*x21*(4*ddq_i1*x102*x16*x21*x6*x7 + 4*ddq_i2*x10*x102*x16*x17*x21 + 4*dq_i1*x102*x16*x21*x32 + 4*dq_i2*x102*x16*x21*x49 + 4*dq_i3*x102*x16*x21*x64 - x106*x154 - x155 - x156*x238 + 2*x16*x23*x64 - x223) + 2*dq_j2*x21*(4*ddq_i1*x102*x125*x21*x6*x7 + 4*ddq_i2*x10*x102*x125*x17*x21 + 4*dq_i1*x102*x125*x21*x32 + 4*dq_i2*x102*x125*x21*x49 + 4*dq_i3*x102*x125*x21*x64 - x106*x129 + 2*x125*x23*x64 - x127*x238 - x130 - x139) + 2*dq_j3*x21*(4*ddq_i1*x102*x140*x21*x6*x7 + 4*ddq_i2*x10*x102*x140*x17*x21 + 4*dq_i1*x102*x140*x21*x32 + 4*dq_i2*x102*x140*x21*x49 + 4*dq_i3*x102*x140*x21*x64 - x106*x143 + 2*x140*x23*x64 - x141 - x142*x23 - x145 - x146 - x147 - x148 - x150 - x151*x238) - 2*x112*(-x106*x64 - x122*x266 + x22*(-x102*x264*x265 + 10*x21*x264 - x238) - x221*x266 + x241 + x257*x35 + x257*x75 + x257*x77 + x258 - x266*x35 - x266*x75 - x266*x77 + x64) - x122*x247 - x149 - x207*x249 - x21*x222*x256 - x261 - x262 - x263 + x52*x53*x61 + x55*x56*x59))
    
    return K_block_list

